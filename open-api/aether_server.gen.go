// Package main provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.7.0 DO NOT EDIT.
package main

import (
	"net/http"

	"github.com/go-chi/chi/v5"
)

// ServerInterface represents all server handlers.
type ServerInterface interface {
	// DELETE /connectivity-services
	// (DELETE /aether/v2.0.x/{target}/connectivity-services)
	DeleteConnectivityServices(w http.ResponseWriter, r *http.Request, target Target)
	// GET /connectivity-services Container
	// (GET /aether/v2.0.x/{target}/connectivity-services)
	GetConnectivityServices(w http.ResponseWriter, r *http.Request, target Target)
	// POST /connectivity-services
	// (POST /aether/v2.0.x/{target}/connectivity-services)
	PostConnectivityServices(w http.ResponseWriter, r *http.Request, target Target)
	// GET /connectivity-services/connectivity-service List
	// (GET /aether/v2.0.x/{target}/connectivity-services/connectivity-service)
	GetConnectivityServicesConnectivityServiceList(w http.ResponseWriter, r *http.Request, target Target)
	// DELETE /connectivity-services/connectivity-service
	// (DELETE /aether/v2.0.x/{target}/connectivity-services/connectivity-service/{connectivity-service-id})
	DeleteConnectivityServicesConnectivityService(w http.ResponseWriter, r *http.Request, target Target, connectivityServiceId string)
	// GET /connectivity-services/connectivity-service Container
	// (GET /aether/v2.0.x/{target}/connectivity-services/connectivity-service/{connectivity-service-id})
	GetConnectivityServicesConnectivityService(w http.ResponseWriter, r *http.Request, target Target, connectivityServiceId string)
	// POST /connectivity-services/connectivity-service
	// (POST /aether/v2.0.x/{target}/connectivity-services/connectivity-service/{connectivity-service-id})
	PostConnectivityServicesConnectivityService(w http.ResponseWriter, r *http.Request, target Target, connectivityServiceId string)
	// DELETE /enterprises
	// (DELETE /aether/v2.0.x/{target}/enterprises)
	DeleteEnterprises(w http.ResponseWriter, r *http.Request, target Target)
	// GET /enterprises Container
	// (GET /aether/v2.0.x/{target}/enterprises)
	GetEnterprises(w http.ResponseWriter, r *http.Request, target Target)
	// POST /enterprises
	// (POST /aether/v2.0.x/{target}/enterprises)
	PostEnterprises(w http.ResponseWriter, r *http.Request, target Target)
	// GET /enterprises/enterprise List
	// (GET /aether/v2.0.x/{target}/enterprises/enterprise)
	GetEnterprisesEnterpriseList(w http.ResponseWriter, r *http.Request, target Target)
	// DELETE /enterprises/enterprise
	// (DELETE /aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id})
	DeleteEnterprisesEnterprise(w http.ResponseWriter, r *http.Request, target Target, enterpriseId string)
	// GET /enterprises/enterprise Container
	// (GET /aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id})
	GetEnterprisesEnterprise(w http.ResponseWriter, r *http.Request, target Target, enterpriseId string)
	// POST /enterprises/enterprise
	// (POST /aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id})
	PostEnterprisesEnterprise(w http.ResponseWriter, r *http.Request, target Target, enterpriseId string)
	// GET /enterprises/enterprise/{enterprise-id}/application List
	// (GET /aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/application)
	GetEnterprisesEnterpriseApplicationList(w http.ResponseWriter, r *http.Request, target Target, enterpriseId string)
	// DELETE /enterprises/enterprise/{enterprise-id}/application
	// (DELETE /aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/application/{application-id})
	DeleteEnterprisesEnterpriseApplication(w http.ResponseWriter, r *http.Request, target Target, enterpriseId string, applicationId string)
	// GET /enterprises/enterprise/{enterprise-id}/application Container
	// (GET /aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/application/{application-id})
	GetEnterprisesEnterpriseApplication(w http.ResponseWriter, r *http.Request, target Target, enterpriseId string, applicationId string)
	// POST /enterprises/enterprise/{enterprise-id}/application
	// (POST /aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/application/{application-id})
	PostEnterprisesEnterpriseApplication(w http.ResponseWriter, r *http.Request, target Target, enterpriseId string, applicationId string)
	// GET /enterprises/enterprise/{enterprise-id}/application/{application-id}/endpoint List
	// (GET /aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/application/{application-id}/endpoint)
	GetEnterprisesEnterpriseApplicationEndpointList(w http.ResponseWriter, r *http.Request, target Target, enterpriseId string, applicationId string)
	// DELETE /enterprises/enterprise/{enterprise-id}/application/{application-id}/endpoint
	// (DELETE /aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/application/{application-id}/endpoint/{endpoint-id})
	DeleteEnterprisesEnterpriseApplicationEndpoint(w http.ResponseWriter, r *http.Request, target Target, enterpriseId string, applicationId string, endpointId string)
	// GET /enterprises/enterprise/{enterprise-id}/application/{application-id}/endpoint Container
	// (GET /aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/application/{application-id}/endpoint/{endpoint-id})
	GetEnterprisesEnterpriseApplicationEndpoint(w http.ResponseWriter, r *http.Request, target Target, enterpriseId string, applicationId string, endpointId string)
	// POST /enterprises/enterprise/{enterprise-id}/application/{application-id}/endpoint
	// (POST /aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/application/{application-id}/endpoint/{endpoint-id})
	PostEnterprisesEnterpriseApplicationEndpoint(w http.ResponseWriter, r *http.Request, target Target, enterpriseId string, applicationId string, endpointId string)
	// DELETE /enterprises/enterprise/{enterprise-id}/application/{application-id}/endpoint/{endpoint-id}/mbr
	// (DELETE /aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/application/{application-id}/endpoint/{endpoint-id}/mbr)
	DeleteEnterprisesEnterpriseApplicationEndpointMbr(w http.ResponseWriter, r *http.Request, target Target, enterpriseId string, applicationId string, endpointId string)
	// GET /enterprises/enterprise/{enterprise-id}/application/{application-id}/endpoint/{endpoint-id}/mbr Container
	// (GET /aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/application/{application-id}/endpoint/{endpoint-id}/mbr)
	GetEnterprisesEnterpriseApplicationEndpointMbr(w http.ResponseWriter, r *http.Request, target Target, enterpriseId string, applicationId string, endpointId string)
	// POST /enterprises/enterprise/{enterprise-id}/application/{application-id}/endpoint/{endpoint-id}/mbr
	// (POST /aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/application/{application-id}/endpoint/{endpoint-id}/mbr)
	PostEnterprisesEnterpriseApplicationEndpointMbr(w http.ResponseWriter, r *http.Request, target Target, enterpriseId string, applicationId string, endpointId string)
	// GET /enterprises/enterprise/{enterprise-id}/connectivity-service List
	// (GET /aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/connectivity-service)
	GetEnterprisesEnterpriseConnectivityServiceList(w http.ResponseWriter, r *http.Request, target Target, enterpriseId string)
	// DELETE /enterprises/enterprise/{enterprise-id}/connectivity-service
	// (DELETE /aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/connectivity-service/{connectivity-service})
	DeleteEnterprisesEnterpriseConnectivityService(w http.ResponseWriter, r *http.Request, target Target, enterpriseId string, connectivityService string)
	// GET /enterprises/enterprise/{enterprise-id}/connectivity-service Container
	// (GET /aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/connectivity-service/{connectivity-service})
	GetEnterprisesEnterpriseConnectivityService(w http.ResponseWriter, r *http.Request, target Target, enterpriseId string, connectivityService string)
	// POST /enterprises/enterprise/{enterprise-id}/connectivity-service
	// (POST /aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/connectivity-service/{connectivity-service})
	PostEnterprisesEnterpriseConnectivityService(w http.ResponseWriter, r *http.Request, target Target, enterpriseId string, connectivityService string)
	// GET /enterprises/enterprise/{enterprise-id}/site List
	// (GET /aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/site)
	GetEnterprisesEnterpriseSiteList(w http.ResponseWriter, r *http.Request, target Target, enterpriseId string)
	// DELETE /enterprises/enterprise/{enterprise-id}/site
	// (DELETE /aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id})
	DeleteEnterprisesEnterpriseSite(w http.ResponseWriter, r *http.Request, target Target, enterpriseId string, siteId string)
	// GET /enterprises/enterprise/{enterprise-id}/site Container
	// (GET /aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id})
	GetEnterprisesEnterpriseSite(w http.ResponseWriter, r *http.Request, target Target, enterpriseId string, siteId string)
	// POST /enterprises/enterprise/{enterprise-id}/site
	// (POST /aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id})
	PostEnterprisesEnterpriseSite(w http.ResponseWriter, r *http.Request, target Target, enterpriseId string, siteId string)
	// GET /enterprises/enterprise/{enterprise-id}/site/{site-id}/device List
	// (GET /aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/device)
	GetEnterprisesEnterpriseSiteDeviceList(w http.ResponseWriter, r *http.Request, target Target, enterpriseId string, siteId string)
	// GET /enterprises/enterprise/{enterprise-id}/site/{site-id}/device-group List
	// (GET /aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/device-group)
	GetEnterprisesEnterpriseSiteDeviceGroupList(w http.ResponseWriter, r *http.Request, target Target, enterpriseId string, siteId string)
	// DELETE /enterprises/enterprise/{enterprise-id}/site/{site-id}/device-group
	// (DELETE /aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/device-group/{device-group-id})
	DeleteEnterprisesEnterpriseSiteDeviceGroup(w http.ResponseWriter, r *http.Request, target Target, enterpriseId string, siteId string, deviceGroupId string)
	// GET /enterprises/enterprise/{enterprise-id}/site/{site-id}/device-group Container
	// (GET /aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/device-group/{device-group-id})
	GetEnterprisesEnterpriseSiteDeviceGroup(w http.ResponseWriter, r *http.Request, target Target, enterpriseId string, siteId string, deviceGroupId string)
	// POST /enterprises/enterprise/{enterprise-id}/site/{site-id}/device-group
	// (POST /aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/device-group/{device-group-id})
	PostEnterprisesEnterpriseSiteDeviceGroup(w http.ResponseWriter, r *http.Request, target Target, enterpriseId string, siteId string, deviceGroupId string)
	// GET /enterprises/enterprise/{enterprise-id}/site/{site-id}/device-group/{device-group-id}/device List
	// (GET /aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/device-group/{device-group-id}/device)
	GetEnterprisesEnterpriseSiteDeviceGroupDeviceList(w http.ResponseWriter, r *http.Request, target Target, enterpriseId string, siteId string, deviceGroupId string)
	// DELETE /enterprises/enterprise/{enterprise-id}/site/{site-id}/device-group/{device-group-id}/device
	// (DELETE /aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/device-group/{device-group-id}/device/{device-id})
	DeleteEnterprisesEnterpriseSiteDeviceGroupDevice(w http.ResponseWriter, r *http.Request, target Target, enterpriseId string, siteId string, deviceGroupId string, deviceId string)
	// GET /enterprises/enterprise/{enterprise-id}/site/{site-id}/device-group/{device-group-id}/device Container
	// (GET /aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/device-group/{device-group-id}/device/{device-id})
	GetEnterprisesEnterpriseSiteDeviceGroupDevice(w http.ResponseWriter, r *http.Request, target Target, enterpriseId string, siteId string, deviceGroupId string, deviceId string)
	// POST /enterprises/enterprise/{enterprise-id}/site/{site-id}/device-group/{device-group-id}/device
	// (POST /aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/device-group/{device-group-id}/device/{device-id})
	PostEnterprisesEnterpriseSiteDeviceGroupDevice(w http.ResponseWriter, r *http.Request, target Target, enterpriseId string, siteId string, deviceGroupId string, deviceId string)
	// DELETE /enterprises/enterprise/{enterprise-id}/site/{site-id}/device-group/{device-group-id}/mbr
	// (DELETE /aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/device-group/{device-group-id}/mbr)
	DeleteEnterprisesEnterpriseSiteDeviceGroupMbr(w http.ResponseWriter, r *http.Request, target Target, enterpriseId string, siteId string, deviceGroupId string)
	// GET /enterprises/enterprise/{enterprise-id}/site/{site-id}/device-group/{device-group-id}/mbr Container
	// (GET /aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/device-group/{device-group-id}/mbr)
	GetEnterprisesEnterpriseSiteDeviceGroupMbr(w http.ResponseWriter, r *http.Request, target Target, enterpriseId string, siteId string, deviceGroupId string)
	// POST /enterprises/enterprise/{enterprise-id}/site/{site-id}/device-group/{device-group-id}/mbr
	// (POST /aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/device-group/{device-group-id}/mbr)
	PostEnterprisesEnterpriseSiteDeviceGroupMbr(w http.ResponseWriter, r *http.Request, target Target, enterpriseId string, siteId string, deviceGroupId string)
	// DELETE /enterprises/enterprise/{enterprise-id}/site/{site-id}/device
	// (DELETE /aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/device/{device-id})
	DeleteEnterprisesEnterpriseSiteDevice(w http.ResponseWriter, r *http.Request, target Target, enterpriseId string, siteId string, deviceId string)
	// GET /enterprises/enterprise/{enterprise-id}/site/{site-id}/device Container
	// (GET /aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/device/{device-id})
	GetEnterprisesEnterpriseSiteDevice(w http.ResponseWriter, r *http.Request, target Target, enterpriseId string, siteId string, deviceId string)
	// POST /enterprises/enterprise/{enterprise-id}/site/{site-id}/device
	// (POST /aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/device/{device-id})
	PostEnterprisesEnterpriseSiteDevice(w http.ResponseWriter, r *http.Request, target Target, enterpriseId string, siteId string, deviceId string)
	// DELETE /enterprises/enterprise/{enterprise-id}/site/{site-id}/imsi-definition
	// (DELETE /aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/imsi-definition)
	DeleteEnterprisesEnterpriseSiteImsiDefinition(w http.ResponseWriter, r *http.Request, target Target, enterpriseId string, siteId string)
	// GET /enterprises/enterprise/{enterprise-id}/site/{site-id}/imsi-definition Container
	// (GET /aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/imsi-definition)
	GetEnterprisesEnterpriseSiteImsiDefinition(w http.ResponseWriter, r *http.Request, target Target, enterpriseId string, siteId string)
	// POST /enterprises/enterprise/{enterprise-id}/site/{site-id}/imsi-definition
	// (POST /aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/imsi-definition)
	PostEnterprisesEnterpriseSiteImsiDefinition(w http.ResponseWriter, r *http.Request, target Target, enterpriseId string, siteId string)
	// GET /enterprises/enterprise/{enterprise-id}/site/{site-id}/ip-domain List
	// (GET /aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/ip-domain)
	GetEnterprisesEnterpriseSiteIpDomainList(w http.ResponseWriter, r *http.Request, target Target, enterpriseId string, siteId string)
	// DELETE /enterprises/enterprise/{enterprise-id}/site/{site-id}/ip-domain
	// (DELETE /aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/ip-domain/{ip-domain-id})
	DeleteEnterprisesEnterpriseSiteIpDomain(w http.ResponseWriter, r *http.Request, target Target, enterpriseId string, siteId string, ipDomainId string)
	// GET /enterprises/enterprise/{enterprise-id}/site/{site-id}/ip-domain Container
	// (GET /aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/ip-domain/{ip-domain-id})
	GetEnterprisesEnterpriseSiteIpDomain(w http.ResponseWriter, r *http.Request, target Target, enterpriseId string, siteId string, ipDomainId string)
	// POST /enterprises/enterprise/{enterprise-id}/site/{site-id}/ip-domain
	// (POST /aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/ip-domain/{ip-domain-id})
	PostEnterprisesEnterpriseSiteIpDomain(w http.ResponseWriter, r *http.Request, target Target, enterpriseId string, siteId string, ipDomainId string)
	// DELETE /enterprises/enterprise/{enterprise-id}/site/{site-id}/monitoring
	// (DELETE /aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/monitoring)
	DeleteEnterprisesEnterpriseSiteMonitoring(w http.ResponseWriter, r *http.Request, target Target, enterpriseId string, siteId string)
	// GET /enterprises/enterprise/{enterprise-id}/site/{site-id}/monitoring Container
	// (GET /aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/monitoring)
	GetEnterprisesEnterpriseSiteMonitoring(w http.ResponseWriter, r *http.Request, target Target, enterpriseId string, siteId string)
	// POST /enterprises/enterprise/{enterprise-id}/site/{site-id}/monitoring
	// (POST /aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/monitoring)
	PostEnterprisesEnterpriseSiteMonitoring(w http.ResponseWriter, r *http.Request, target Target, enterpriseId string, siteId string)
	// GET /enterprises/enterprise/{enterprise-id}/site/{site-id}/monitoring/edge-device List
	// (GET /aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/monitoring/edge-device)
	GetEnterprisesEnterpriseSiteMonitoringEdgeDeviceList(w http.ResponseWriter, r *http.Request, target Target, enterpriseId string, siteId string)
	// DELETE /enterprises/enterprise/{enterprise-id}/site/{site-id}/monitoring/edge-device
	// (DELETE /aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/monitoring/edge-device/{edge-device-id})
	DeleteEnterprisesEnterpriseSiteMonitoringEdgeDevice(w http.ResponseWriter, r *http.Request, target Target, enterpriseId string, siteId string, edgeDeviceId string)
	// GET /enterprises/enterprise/{enterprise-id}/site/{site-id}/monitoring/edge-device Container
	// (GET /aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/monitoring/edge-device/{edge-device-id})
	GetEnterprisesEnterpriseSiteMonitoringEdgeDevice(w http.ResponseWriter, r *http.Request, target Target, enterpriseId string, siteId string, edgeDeviceId string)
	// POST /enterprises/enterprise/{enterprise-id}/site/{site-id}/monitoring/edge-device
	// (POST /aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/monitoring/edge-device/{edge-device-id})
	PostEnterprisesEnterpriseSiteMonitoringEdgeDevice(w http.ResponseWriter, r *http.Request, target Target, enterpriseId string, siteId string, edgeDeviceId string)
	// GET /enterprises/enterprise/{enterprise-id}/site/{site-id}/sim-card List
	// (GET /aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/sim-card)
	GetEnterprisesEnterpriseSiteSimCardList(w http.ResponseWriter, r *http.Request, target Target, enterpriseId string, siteId string)
	// DELETE /enterprises/enterprise/{enterprise-id}/site/{site-id}/sim-card
	// (DELETE /aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/sim-card/{sim-id})
	DeleteEnterprisesEnterpriseSiteSimCard(w http.ResponseWriter, r *http.Request, target Target, enterpriseId string, siteId string, simId string)
	// GET /enterprises/enterprise/{enterprise-id}/site/{site-id}/sim-card Container
	// (GET /aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/sim-card/{sim-id})
	GetEnterprisesEnterpriseSiteSimCard(w http.ResponseWriter, r *http.Request, target Target, enterpriseId string, siteId string, simId string)
	// POST /enterprises/enterprise/{enterprise-id}/site/{site-id}/sim-card
	// (POST /aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/sim-card/{sim-id})
	PostEnterprisesEnterpriseSiteSimCard(w http.ResponseWriter, r *http.Request, target Target, enterpriseId string, siteId string, simId string)
	// GET /enterprises/enterprise/{enterprise-id}/site/{site-id}/slice List
	// (GET /aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/slice)
	GetEnterprisesEnterpriseSiteSliceList(w http.ResponseWriter, r *http.Request, target Target, enterpriseId string, siteId string)
	// DELETE /enterprises/enterprise/{enterprise-id}/site/{site-id}/slice
	// (DELETE /aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/slice/{slice-id})
	DeleteEnterprisesEnterpriseSiteSlice(w http.ResponseWriter, r *http.Request, target Target, enterpriseId string, siteId string, sliceId string)
	// GET /enterprises/enterprise/{enterprise-id}/site/{site-id}/slice Container
	// (GET /aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/slice/{slice-id})
	GetEnterprisesEnterpriseSiteSlice(w http.ResponseWriter, r *http.Request, target Target, enterpriseId string, siteId string, sliceId string)
	// POST /enterprises/enterprise/{enterprise-id}/site/{site-id}/slice
	// (POST /aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/slice/{slice-id})
	PostEnterprisesEnterpriseSiteSlice(w http.ResponseWriter, r *http.Request, target Target, enterpriseId string, siteId string, sliceId string)
	// GET /enterprises/enterprise/{enterprise-id}/site/{site-id}/slice/{slice-id}/device-group List
	// (GET /aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/slice/{slice-id}/device-group)
	GetEnterprisesEnterpriseSiteSliceDeviceGroupList(w http.ResponseWriter, r *http.Request, target Target, enterpriseId string, siteId string, sliceId string)
	// DELETE /enterprises/enterprise/{enterprise-id}/site/{site-id}/slice/{slice-id}/device-group
	// (DELETE /aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/slice/{slice-id}/device-group/{device-group})
	DeleteEnterprisesEnterpriseSiteSliceDeviceGroup(w http.ResponseWriter, r *http.Request, target Target, enterpriseId string, siteId string, sliceId string, deviceGroup string)
	// GET /enterprises/enterprise/{enterprise-id}/site/{site-id}/slice/{slice-id}/device-group Container
	// (GET /aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/slice/{slice-id}/device-group/{device-group})
	GetEnterprisesEnterpriseSiteSliceDeviceGroup(w http.ResponseWriter, r *http.Request, target Target, enterpriseId string, siteId string, sliceId string, deviceGroup string)
	// POST /enterprises/enterprise/{enterprise-id}/site/{site-id}/slice/{slice-id}/device-group
	// (POST /aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/slice/{slice-id}/device-group/{device-group})
	PostEnterprisesEnterpriseSiteSliceDeviceGroup(w http.ResponseWriter, r *http.Request, target Target, enterpriseId string, siteId string, sliceId string, deviceGroup string)
	// GET /enterprises/enterprise/{enterprise-id}/site/{site-id}/slice/{slice-id}/filter List
	// (GET /aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/slice/{slice-id}/filter)
	GetEnterprisesEnterpriseSiteSliceFilterList(w http.ResponseWriter, r *http.Request, target Target, enterpriseId string, siteId string, sliceId string)
	// DELETE /enterprises/enterprise/{enterprise-id}/site/{site-id}/slice/{slice-id}/filter
	// (DELETE /aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/slice/{slice-id}/filter/{application})
	DeleteEnterprisesEnterpriseSiteSliceFilter(w http.ResponseWriter, r *http.Request, target Target, enterpriseId string, siteId string, sliceId string, application string)
	// GET /enterprises/enterprise/{enterprise-id}/site/{site-id}/slice/{slice-id}/filter Container
	// (GET /aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/slice/{slice-id}/filter/{application})
	GetEnterprisesEnterpriseSiteSliceFilter(w http.ResponseWriter, r *http.Request, target Target, enterpriseId string, siteId string, sliceId string, application string)
	// POST /enterprises/enterprise/{enterprise-id}/site/{site-id}/slice/{slice-id}/filter
	// (POST /aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/slice/{slice-id}/filter/{application})
	PostEnterprisesEnterpriseSiteSliceFilter(w http.ResponseWriter, r *http.Request, target Target, enterpriseId string, siteId string, sliceId string, application string)
	// DELETE /enterprises/enterprise/{enterprise-id}/site/{site-id}/slice/{slice-id}/mbr
	// (DELETE /aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/slice/{slice-id}/mbr)
	DeleteEnterprisesEnterpriseSiteSliceMbr(w http.ResponseWriter, r *http.Request, target Target, enterpriseId string, siteId string, sliceId string)
	// GET /enterprises/enterprise/{enterprise-id}/site/{site-id}/slice/{slice-id}/mbr Container
	// (GET /aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/slice/{slice-id}/mbr)
	GetEnterprisesEnterpriseSiteSliceMbr(w http.ResponseWriter, r *http.Request, target Target, enterpriseId string, siteId string, sliceId string)
	// POST /enterprises/enterprise/{enterprise-id}/site/{site-id}/slice/{slice-id}/mbr
	// (POST /aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/slice/{slice-id}/mbr)
	PostEnterprisesEnterpriseSiteSliceMbr(w http.ResponseWriter, r *http.Request, target Target, enterpriseId string, siteId string, sliceId string)
	// GET /enterprises/enterprise/{enterprise-id}/site/{site-id}/slice/{slice-id}/priority-traffic-rule List
	// (GET /aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/slice/{slice-id}/priority-traffic-rule)
	GetEnterprisesEnterpriseSiteSlicePriorityTrafficRuleList(w http.ResponseWriter, r *http.Request, target Target, enterpriseId string, siteId string, sliceId string)
	// DELETE /enterprises/enterprise/{enterprise-id}/site/{site-id}/slice/{slice-id}/priority-traffic-rule
	// (DELETE /aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/slice/{slice-id}/priority-traffic-rule/{priority-traffic-rule-id})
	DeleteEnterprisesEnterpriseSiteSlicePriorityTrafficRule(w http.ResponseWriter, r *http.Request, target Target, enterpriseId string, siteId string, sliceId string, priorityTrafficRuleId string)
	// GET /enterprises/enterprise/{enterprise-id}/site/{site-id}/slice/{slice-id}/priority-traffic-rule Container
	// (GET /aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/slice/{slice-id}/priority-traffic-rule/{priority-traffic-rule-id})
	GetEnterprisesEnterpriseSiteSlicePriorityTrafficRule(w http.ResponseWriter, r *http.Request, target Target, enterpriseId string, siteId string, sliceId string, priorityTrafficRuleId string)
	// POST /enterprises/enterprise/{enterprise-id}/site/{site-id}/slice/{slice-id}/priority-traffic-rule
	// (POST /aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/slice/{slice-id}/priority-traffic-rule/{priority-traffic-rule-id})
	PostEnterprisesEnterpriseSiteSlicePriorityTrafficRule(w http.ResponseWriter, r *http.Request, target Target, enterpriseId string, siteId string, sliceId string, priorityTrafficRuleId string)
	// GET /enterprises/enterprise/{enterprise-id}/site/{site-id}/small-cell List
	// (GET /aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/small-cell)
	GetEnterprisesEnterpriseSiteSmallCellList(w http.ResponseWriter, r *http.Request, target Target, enterpriseId string, siteId string)
	// DELETE /enterprises/enterprise/{enterprise-id}/site/{site-id}/small-cell
	// (DELETE /aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/small-cell/{small-cell-id})
	DeleteEnterprisesEnterpriseSiteSmallCell(w http.ResponseWriter, r *http.Request, target Target, enterpriseId string, siteId string, smallCellId string)
	// GET /enterprises/enterprise/{enterprise-id}/site/{site-id}/small-cell Container
	// (GET /aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/small-cell/{small-cell-id})
	GetEnterprisesEnterpriseSiteSmallCell(w http.ResponseWriter, r *http.Request, target Target, enterpriseId string, siteId string, smallCellId string)
	// POST /enterprises/enterprise/{enterprise-id}/site/{site-id}/small-cell
	// (POST /aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/small-cell/{small-cell-id})
	PostEnterprisesEnterpriseSiteSmallCell(w http.ResponseWriter, r *http.Request, target Target, enterpriseId string, siteId string, smallCellId string)
	// GET /enterprises/enterprise/{enterprise-id}/site/{site-id}/upf List
	// (GET /aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/upf)
	GetEnterprisesEnterpriseSiteUpfList(w http.ResponseWriter, r *http.Request, target Target, enterpriseId string, siteId string)
	// DELETE /enterprises/enterprise/{enterprise-id}/site/{site-id}/upf
	// (DELETE /aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/upf/{upf-id})
	DeleteEnterprisesEnterpriseSiteUpf(w http.ResponseWriter, r *http.Request, target Target, enterpriseId string, siteId string, upfId string)
	// GET /enterprises/enterprise/{enterprise-id}/site/{site-id}/upf Container
	// (GET /aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/upf/{upf-id})
	GetEnterprisesEnterpriseSiteUpf(w http.ResponseWriter, r *http.Request, target Target, enterpriseId string, siteId string, upfId string)
	// POST /enterprises/enterprise/{enterprise-id}/site/{site-id}/upf
	// (POST /aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/upf/{upf-id})
	PostEnterprisesEnterpriseSiteUpf(w http.ResponseWriter, r *http.Request, target Target, enterpriseId string, siteId string, upfId string)
	// GET /enterprises/enterprise/{enterprise-id}/template List
	// (GET /aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/template)
	GetEnterprisesEnterpriseTemplateList(w http.ResponseWriter, r *http.Request, target Target, enterpriseId string)
	// DELETE /enterprises/enterprise/{enterprise-id}/template
	// (DELETE /aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/template/{template-id})
	DeleteEnterprisesEnterpriseTemplate(w http.ResponseWriter, r *http.Request, target Target, enterpriseId string, templateId string)
	// GET /enterprises/enterprise/{enterprise-id}/template Container
	// (GET /aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/template/{template-id})
	GetEnterprisesEnterpriseTemplate(w http.ResponseWriter, r *http.Request, target Target, enterpriseId string, templateId string)
	// POST /enterprises/enterprise/{enterprise-id}/template
	// (POST /aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/template/{template-id})
	PostEnterprisesEnterpriseTemplate(w http.ResponseWriter, r *http.Request, target Target, enterpriseId string, templateId string)
	// DELETE /enterprises/enterprise/{enterprise-id}/template/{template-id}/mbr
	// (DELETE /aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/template/{template-id}/mbr)
	DeleteEnterprisesEnterpriseTemplateMbr(w http.ResponseWriter, r *http.Request, target Target, enterpriseId string, templateId string)
	// GET /enterprises/enterprise/{enterprise-id}/template/{template-id}/mbr Container
	// (GET /aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/template/{template-id}/mbr)
	GetEnterprisesEnterpriseTemplateMbr(w http.ResponseWriter, r *http.Request, target Target, enterpriseId string, templateId string)
	// POST /enterprises/enterprise/{enterprise-id}/template/{template-id}/mbr
	// (POST /aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/template/{template-id}/mbr)
	PostEnterprisesEnterpriseTemplateMbr(w http.ResponseWriter, r *http.Request, target Target, enterpriseId string, templateId string)
	// GET /enterprises/enterprise/{enterprise-id}/traffic-class List
	// (GET /aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/traffic-class)
	GetEnterprisesEnterpriseTrafficClassList(w http.ResponseWriter, r *http.Request, target Target, enterpriseId string)
	// DELETE /enterprises/enterprise/{enterprise-id}/traffic-class
	// (DELETE /aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/traffic-class/{traffic-class-id})
	DeleteEnterprisesEnterpriseTrafficClass(w http.ResponseWriter, r *http.Request, target Target, enterpriseId string, trafficClassId string)
	// GET /enterprises/enterprise/{enterprise-id}/traffic-class Container
	// (GET /aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/traffic-class/{traffic-class-id})
	GetEnterprisesEnterpriseTrafficClass(w http.ResponseWriter, r *http.Request, target Target, enterpriseId string, trafficClassId string)
	// POST /enterprises/enterprise/{enterprise-id}/traffic-class
	// (POST /aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/traffic-class/{traffic-class-id})
	PostEnterprisesEnterpriseTrafficClass(w http.ResponseWriter, r *http.Request, target Target, enterpriseId string, trafficClassId string)
}

// ServerInterfaceWrapper converts contexts to parameters.
type ServerInterfaceWrapper struct {
	Handler            ServerInterface
	HandlerMiddlewares []MiddlewareFunc
}

type MiddlewareFunc func(http.HandlerFunc) http.HandlerFunc

// DeleteConnectivityServices operation middleware
func (siw *ServerInterfaceWrapper) DeleteConnectivityServices(w http.ResponseWriter, r *http.Request) {
	ctx := r.Context()

	var err error

	// ------------- Path parameter "target" -------------
	var target Target

	target = chi.URLParam(r, "target")

	var handler = func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.DeleteConnectivityServices(w, r, target)
	}

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler(w, r.WithContext(ctx))
}

// GetConnectivityServices operation middleware
func (siw *ServerInterfaceWrapper) GetConnectivityServices(w http.ResponseWriter, r *http.Request) {
	ctx := r.Context()

	var err error

	// ------------- Path parameter "target" -------------
	var target Target

	target = chi.URLParam(r, "target")

	var handler = func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.GetConnectivityServices(w, r, target)
	}

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler(w, r.WithContext(ctx))
}

// PostConnectivityServices operation middleware
func (siw *ServerInterfaceWrapper) PostConnectivityServices(w http.ResponseWriter, r *http.Request) {
	ctx := r.Context()

	var err error

	// ------------- Path parameter "target" -------------
	var target Target

	target = chi.URLParam(r, "target")

	var handler = func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.PostConnectivityServices(w, r, target)
	}

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler(w, r.WithContext(ctx))
}

// GetConnectivityServicesConnectivityServiceList operation middleware
func (siw *ServerInterfaceWrapper) GetConnectivityServicesConnectivityServiceList(w http.ResponseWriter, r *http.Request) {
	ctx := r.Context()

	var err error

	// ------------- Path parameter "target" -------------
	var target Target

	target = chi.URLParam(r, "target")

	var handler = func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.GetConnectivityServicesConnectivityServiceList(w, r, target)
	}

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler(w, r.WithContext(ctx))
}

// DeleteConnectivityServicesConnectivityService operation middleware
func (siw *ServerInterfaceWrapper) DeleteConnectivityServicesConnectivityService(w http.ResponseWriter, r *http.Request) {
	ctx := r.Context()

	var err error

	// ------------- Path parameter "target" -------------
	var target Target

	target = chi.URLParam(r, "target")

	// ------------- Path parameter "connectivity-service-id" -------------
	var connectivityServiceId string

	connectivityServiceId = chi.URLParam(r, "connectivity-service-id")

	var handler = func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.DeleteConnectivityServicesConnectivityService(w, r, target, connectivityServiceId)
	}

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler(w, r.WithContext(ctx))
}

// GetConnectivityServicesConnectivityService operation middleware
func (siw *ServerInterfaceWrapper) GetConnectivityServicesConnectivityService(w http.ResponseWriter, r *http.Request) {
	ctx := r.Context()

	var err error

	// ------------- Path parameter "target" -------------
	var target Target

	target = chi.URLParam(r, "target")

	// ------------- Path parameter "connectivity-service-id" -------------
	var connectivityServiceId string

	connectivityServiceId = chi.URLParam(r, "connectivity-service-id")

	var handler = func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.GetConnectivityServicesConnectivityService(w, r, target, connectivityServiceId)
	}

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler(w, r.WithContext(ctx))
}

// PostConnectivityServicesConnectivityService operation middleware
func (siw *ServerInterfaceWrapper) PostConnectivityServicesConnectivityService(w http.ResponseWriter, r *http.Request) {
	ctx := r.Context()

	var err error

	// ------------- Path parameter "target" -------------
	var target Target

	target = chi.URLParam(r, "target")

	// ------------- Path parameter "connectivity-service-id" -------------
	var connectivityServiceId string

	connectivityServiceId = chi.URLParam(r, "connectivity-service-id")

	var handler = func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.PostConnectivityServicesConnectivityService(w, r, target, connectivityServiceId)
	}

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler(w, r.WithContext(ctx))
}

// DeleteEnterprises operation middleware
func (siw *ServerInterfaceWrapper) DeleteEnterprises(w http.ResponseWriter, r *http.Request) {
	ctx := r.Context()

	var err error

	// ------------- Path parameter "target" -------------
	var target Target

	target = chi.URLParam(r, "target")

	var handler = func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.DeleteEnterprises(w, r, target)
	}

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler(w, r.WithContext(ctx))
}

// GetEnterprises operation middleware
func (siw *ServerInterfaceWrapper) GetEnterprises(w http.ResponseWriter, r *http.Request) {
	ctx := r.Context()

	var err error

	// ------------- Path parameter "target" -------------
	var target Target

	target = chi.URLParam(r, "target")

	var handler = func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.GetEnterprises(w, r, target)
	}

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler(w, r.WithContext(ctx))
}

// PostEnterprises operation middleware
func (siw *ServerInterfaceWrapper) PostEnterprises(w http.ResponseWriter, r *http.Request) {
	ctx := r.Context()

	var err error

	// ------------- Path parameter "target" -------------
	var target Target

	target = chi.URLParam(r, "target")

	var handler = func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.PostEnterprises(w, r, target)
	}

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler(w, r.WithContext(ctx))
}

// GetEnterprisesEnterpriseList operation middleware
func (siw *ServerInterfaceWrapper) GetEnterprisesEnterpriseList(w http.ResponseWriter, r *http.Request) {
	ctx := r.Context()

	var err error

	// ------------- Path parameter "target" -------------
	var target Target

	target = chi.URLParam(r, "target")

	var handler = func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.GetEnterprisesEnterpriseList(w, r, target)
	}

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler(w, r.WithContext(ctx))
}

// DeleteEnterprisesEnterprise operation middleware
func (siw *ServerInterfaceWrapper) DeleteEnterprisesEnterprise(w http.ResponseWriter, r *http.Request) {
	ctx := r.Context()

	var err error

	// ------------- Path parameter "target" -------------
	var target Target

	target = chi.URLParam(r, "target")

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = chi.URLParam(r, "enterprise-id")

	var handler = func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.DeleteEnterprisesEnterprise(w, r, target, enterpriseId)
	}

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler(w, r.WithContext(ctx))
}

// GetEnterprisesEnterprise operation middleware
func (siw *ServerInterfaceWrapper) GetEnterprisesEnterprise(w http.ResponseWriter, r *http.Request) {
	ctx := r.Context()

	var err error

	// ------------- Path parameter "target" -------------
	var target Target

	target = chi.URLParam(r, "target")

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = chi.URLParam(r, "enterprise-id")

	var handler = func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.GetEnterprisesEnterprise(w, r, target, enterpriseId)
	}

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler(w, r.WithContext(ctx))
}

// PostEnterprisesEnterprise operation middleware
func (siw *ServerInterfaceWrapper) PostEnterprisesEnterprise(w http.ResponseWriter, r *http.Request) {
	ctx := r.Context()

	var err error

	// ------------- Path parameter "target" -------------
	var target Target

	target = chi.URLParam(r, "target")

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = chi.URLParam(r, "enterprise-id")

	var handler = func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.PostEnterprisesEnterprise(w, r, target, enterpriseId)
	}

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler(w, r.WithContext(ctx))
}

// GetEnterprisesEnterpriseApplicationList operation middleware
func (siw *ServerInterfaceWrapper) GetEnterprisesEnterpriseApplicationList(w http.ResponseWriter, r *http.Request) {
	ctx := r.Context()

	var err error

	// ------------- Path parameter "target" -------------
	var target Target

	target = chi.URLParam(r, "target")

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = chi.URLParam(r, "enterprise-id")

	var handler = func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.GetEnterprisesEnterpriseApplicationList(w, r, target, enterpriseId)
	}

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler(w, r.WithContext(ctx))
}

// DeleteEnterprisesEnterpriseApplication operation middleware
func (siw *ServerInterfaceWrapper) DeleteEnterprisesEnterpriseApplication(w http.ResponseWriter, r *http.Request) {
	ctx := r.Context()

	var err error

	// ------------- Path parameter "target" -------------
	var target Target

	target = chi.URLParam(r, "target")

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = chi.URLParam(r, "enterprise-id")

	// ------------- Path parameter "application-id" -------------
	var applicationId string

	applicationId = chi.URLParam(r, "application-id")

	var handler = func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.DeleteEnterprisesEnterpriseApplication(w, r, target, enterpriseId, applicationId)
	}

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler(w, r.WithContext(ctx))
}

// GetEnterprisesEnterpriseApplication operation middleware
func (siw *ServerInterfaceWrapper) GetEnterprisesEnterpriseApplication(w http.ResponseWriter, r *http.Request) {
	ctx := r.Context()

	var err error

	// ------------- Path parameter "target" -------------
	var target Target

	target = chi.URLParam(r, "target")

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = chi.URLParam(r, "enterprise-id")

	// ------------- Path parameter "application-id" -------------
	var applicationId string

	applicationId = chi.URLParam(r, "application-id")

	var handler = func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.GetEnterprisesEnterpriseApplication(w, r, target, enterpriseId, applicationId)
	}

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler(w, r.WithContext(ctx))
}

// PostEnterprisesEnterpriseApplication operation middleware
func (siw *ServerInterfaceWrapper) PostEnterprisesEnterpriseApplication(w http.ResponseWriter, r *http.Request) {
	ctx := r.Context()

	var err error

	// ------------- Path parameter "target" -------------
	var target Target

	target = chi.URLParam(r, "target")

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = chi.URLParam(r, "enterprise-id")

	// ------------- Path parameter "application-id" -------------
	var applicationId string

	applicationId = chi.URLParam(r, "application-id")

	var handler = func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.PostEnterprisesEnterpriseApplication(w, r, target, enterpriseId, applicationId)
	}

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler(w, r.WithContext(ctx))
}

// GetEnterprisesEnterpriseApplicationEndpointList operation middleware
func (siw *ServerInterfaceWrapper) GetEnterprisesEnterpriseApplicationEndpointList(w http.ResponseWriter, r *http.Request) {
	ctx := r.Context()

	var err error

	// ------------- Path parameter "target" -------------
	var target Target

	target = chi.URLParam(r, "target")

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = chi.URLParam(r, "enterprise-id")

	// ------------- Path parameter "application-id" -------------
	var applicationId string

	applicationId = chi.URLParam(r, "application-id")

	var handler = func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.GetEnterprisesEnterpriseApplicationEndpointList(w, r, target, enterpriseId, applicationId)
	}

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler(w, r.WithContext(ctx))
}

// DeleteEnterprisesEnterpriseApplicationEndpoint operation middleware
func (siw *ServerInterfaceWrapper) DeleteEnterprisesEnterpriseApplicationEndpoint(w http.ResponseWriter, r *http.Request) {
	ctx := r.Context()

	var err error

	// ------------- Path parameter "target" -------------
	var target Target

	target = chi.URLParam(r, "target")

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = chi.URLParam(r, "enterprise-id")

	// ------------- Path parameter "application-id" -------------
	var applicationId string

	applicationId = chi.URLParam(r, "application-id")

	// ------------- Path parameter "endpoint-id" -------------
	var endpointId string

	endpointId = chi.URLParam(r, "endpoint-id")

	var handler = func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.DeleteEnterprisesEnterpriseApplicationEndpoint(w, r, target, enterpriseId, applicationId, endpointId)
	}

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler(w, r.WithContext(ctx))
}

// GetEnterprisesEnterpriseApplicationEndpoint operation middleware
func (siw *ServerInterfaceWrapper) GetEnterprisesEnterpriseApplicationEndpoint(w http.ResponseWriter, r *http.Request) {
	ctx := r.Context()

	var err error

	// ------------- Path parameter "target" -------------
	var target Target

	target = chi.URLParam(r, "target")

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = chi.URLParam(r, "enterprise-id")

	// ------------- Path parameter "application-id" -------------
	var applicationId string

	applicationId = chi.URLParam(r, "application-id")

	// ------------- Path parameter "endpoint-id" -------------
	var endpointId string

	endpointId = chi.URLParam(r, "endpoint-id")

	var handler = func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.GetEnterprisesEnterpriseApplicationEndpoint(w, r, target, enterpriseId, applicationId, endpointId)
	}

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler(w, r.WithContext(ctx))
}

// PostEnterprisesEnterpriseApplicationEndpoint operation middleware
func (siw *ServerInterfaceWrapper) PostEnterprisesEnterpriseApplicationEndpoint(w http.ResponseWriter, r *http.Request) {
	ctx := r.Context()

	var err error

	// ------------- Path parameter "target" -------------
	var target Target

	target = chi.URLParam(r, "target")

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = chi.URLParam(r, "enterprise-id")

	// ------------- Path parameter "application-id" -------------
	var applicationId string

	applicationId = chi.URLParam(r, "application-id")

	// ------------- Path parameter "endpoint-id" -------------
	var endpointId string

	endpointId = chi.URLParam(r, "endpoint-id")

	var handler = func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.PostEnterprisesEnterpriseApplicationEndpoint(w, r, target, enterpriseId, applicationId, endpointId)
	}

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler(w, r.WithContext(ctx))
}

// DeleteEnterprisesEnterpriseApplicationEndpointMbr operation middleware
func (siw *ServerInterfaceWrapper) DeleteEnterprisesEnterpriseApplicationEndpointMbr(w http.ResponseWriter, r *http.Request) {
	ctx := r.Context()

	var err error

	// ------------- Path parameter "target" -------------
	var target Target

	target = chi.URLParam(r, "target")

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = chi.URLParam(r, "enterprise-id")

	// ------------- Path parameter "application-id" -------------
	var applicationId string

	applicationId = chi.URLParam(r, "application-id")

	// ------------- Path parameter "endpoint-id" -------------
	var endpointId string

	endpointId = chi.URLParam(r, "endpoint-id")

	var handler = func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.DeleteEnterprisesEnterpriseApplicationEndpointMbr(w, r, target, enterpriseId, applicationId, endpointId)
	}

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler(w, r.WithContext(ctx))
}

// GetEnterprisesEnterpriseApplicationEndpointMbr operation middleware
func (siw *ServerInterfaceWrapper) GetEnterprisesEnterpriseApplicationEndpointMbr(w http.ResponseWriter, r *http.Request) {
	ctx := r.Context()

	var err error

	// ------------- Path parameter "target" -------------
	var target Target

	target = chi.URLParam(r, "target")

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = chi.URLParam(r, "enterprise-id")

	// ------------- Path parameter "application-id" -------------
	var applicationId string

	applicationId = chi.URLParam(r, "application-id")

	// ------------- Path parameter "endpoint-id" -------------
	var endpointId string

	endpointId = chi.URLParam(r, "endpoint-id")

	var handler = func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.GetEnterprisesEnterpriseApplicationEndpointMbr(w, r, target, enterpriseId, applicationId, endpointId)
	}

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler(w, r.WithContext(ctx))
}

// PostEnterprisesEnterpriseApplicationEndpointMbr operation middleware
func (siw *ServerInterfaceWrapper) PostEnterprisesEnterpriseApplicationEndpointMbr(w http.ResponseWriter, r *http.Request) {
	ctx := r.Context()

	var err error

	// ------------- Path parameter "target" -------------
	var target Target

	target = chi.URLParam(r, "target")

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = chi.URLParam(r, "enterprise-id")

	// ------------- Path parameter "application-id" -------------
	var applicationId string

	applicationId = chi.URLParam(r, "application-id")

	// ------------- Path parameter "endpoint-id" -------------
	var endpointId string

	endpointId = chi.URLParam(r, "endpoint-id")

	var handler = func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.PostEnterprisesEnterpriseApplicationEndpointMbr(w, r, target, enterpriseId, applicationId, endpointId)
	}

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler(w, r.WithContext(ctx))
}

// GetEnterprisesEnterpriseConnectivityServiceList operation middleware
func (siw *ServerInterfaceWrapper) GetEnterprisesEnterpriseConnectivityServiceList(w http.ResponseWriter, r *http.Request) {
	ctx := r.Context()

	var err error

	// ------------- Path parameter "target" -------------
	var target Target

	target = chi.URLParam(r, "target")

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = chi.URLParam(r, "enterprise-id")

	var handler = func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.GetEnterprisesEnterpriseConnectivityServiceList(w, r, target, enterpriseId)
	}

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler(w, r.WithContext(ctx))
}

// DeleteEnterprisesEnterpriseConnectivityService operation middleware
func (siw *ServerInterfaceWrapper) DeleteEnterprisesEnterpriseConnectivityService(w http.ResponseWriter, r *http.Request) {
	ctx := r.Context()

	var err error

	// ------------- Path parameter "target" -------------
	var target Target

	target = chi.URLParam(r, "target")

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = chi.URLParam(r, "enterprise-id")

	// ------------- Path parameter "connectivity-service" -------------
	var connectivityService string

	connectivityService = chi.URLParam(r, "connectivity-service")

	var handler = func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.DeleteEnterprisesEnterpriseConnectivityService(w, r, target, enterpriseId, connectivityService)
	}

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler(w, r.WithContext(ctx))
}

// GetEnterprisesEnterpriseConnectivityService operation middleware
func (siw *ServerInterfaceWrapper) GetEnterprisesEnterpriseConnectivityService(w http.ResponseWriter, r *http.Request) {
	ctx := r.Context()

	var err error

	// ------------- Path parameter "target" -------------
	var target Target

	target = chi.URLParam(r, "target")

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = chi.URLParam(r, "enterprise-id")

	// ------------- Path parameter "connectivity-service" -------------
	var connectivityService string

	connectivityService = chi.URLParam(r, "connectivity-service")

	var handler = func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.GetEnterprisesEnterpriseConnectivityService(w, r, target, enterpriseId, connectivityService)
	}

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler(w, r.WithContext(ctx))
}

// PostEnterprisesEnterpriseConnectivityService operation middleware
func (siw *ServerInterfaceWrapper) PostEnterprisesEnterpriseConnectivityService(w http.ResponseWriter, r *http.Request) {
	ctx := r.Context()

	var err error

	// ------------- Path parameter "target" -------------
	var target Target

	target = chi.URLParam(r, "target")

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = chi.URLParam(r, "enterprise-id")

	// ------------- Path parameter "connectivity-service" -------------
	var connectivityService string

	connectivityService = chi.URLParam(r, "connectivity-service")

	var handler = func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.PostEnterprisesEnterpriseConnectivityService(w, r, target, enterpriseId, connectivityService)
	}

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler(w, r.WithContext(ctx))
}

// GetEnterprisesEnterpriseSiteList operation middleware
func (siw *ServerInterfaceWrapper) GetEnterprisesEnterpriseSiteList(w http.ResponseWriter, r *http.Request) {
	ctx := r.Context()

	var err error

	// ------------- Path parameter "target" -------------
	var target Target

	target = chi.URLParam(r, "target")

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = chi.URLParam(r, "enterprise-id")

	var handler = func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.GetEnterprisesEnterpriseSiteList(w, r, target, enterpriseId)
	}

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler(w, r.WithContext(ctx))
}

// DeleteEnterprisesEnterpriseSite operation middleware
func (siw *ServerInterfaceWrapper) DeleteEnterprisesEnterpriseSite(w http.ResponseWriter, r *http.Request) {
	ctx := r.Context()

	var err error

	// ------------- Path parameter "target" -------------
	var target Target

	target = chi.URLParam(r, "target")

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = chi.URLParam(r, "enterprise-id")

	// ------------- Path parameter "site-id" -------------
	var siteId string

	siteId = chi.URLParam(r, "site-id")

	var handler = func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.DeleteEnterprisesEnterpriseSite(w, r, target, enterpriseId, siteId)
	}

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler(w, r.WithContext(ctx))
}

// GetEnterprisesEnterpriseSite operation middleware
func (siw *ServerInterfaceWrapper) GetEnterprisesEnterpriseSite(w http.ResponseWriter, r *http.Request) {
	ctx := r.Context()

	var err error

	// ------------- Path parameter "target" -------------
	var target Target

	target = chi.URLParam(r, "target")

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = chi.URLParam(r, "enterprise-id")

	// ------------- Path parameter "site-id" -------------
	var siteId string

	siteId = chi.URLParam(r, "site-id")

	var handler = func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.GetEnterprisesEnterpriseSite(w, r, target, enterpriseId, siteId)
	}

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler(w, r.WithContext(ctx))
}

// PostEnterprisesEnterpriseSite operation middleware
func (siw *ServerInterfaceWrapper) PostEnterprisesEnterpriseSite(w http.ResponseWriter, r *http.Request) {
	ctx := r.Context()

	var err error

	// ------------- Path parameter "target" -------------
	var target Target

	target = chi.URLParam(r, "target")

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = chi.URLParam(r, "enterprise-id")

	// ------------- Path parameter "site-id" -------------
	var siteId string

	siteId = chi.URLParam(r, "site-id")

	var handler = func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.PostEnterprisesEnterpriseSite(w, r, target, enterpriseId, siteId)
	}

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler(w, r.WithContext(ctx))
}

// GetEnterprisesEnterpriseSiteDeviceList operation middleware
func (siw *ServerInterfaceWrapper) GetEnterprisesEnterpriseSiteDeviceList(w http.ResponseWriter, r *http.Request) {
	ctx := r.Context()

	var err error

	// ------------- Path parameter "target" -------------
	var target Target

	target = chi.URLParam(r, "target")

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = chi.URLParam(r, "enterprise-id")

	// ------------- Path parameter "site-id" -------------
	var siteId string

	siteId = chi.URLParam(r, "site-id")

	var handler = func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.GetEnterprisesEnterpriseSiteDeviceList(w, r, target, enterpriseId, siteId)
	}

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler(w, r.WithContext(ctx))
}

// GetEnterprisesEnterpriseSiteDeviceGroupList operation middleware
func (siw *ServerInterfaceWrapper) GetEnterprisesEnterpriseSiteDeviceGroupList(w http.ResponseWriter, r *http.Request) {
	ctx := r.Context()

	var err error

	// ------------- Path parameter "target" -------------
	var target Target

	target = chi.URLParam(r, "target")

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = chi.URLParam(r, "enterprise-id")

	// ------------- Path parameter "site-id" -------------
	var siteId string

	siteId = chi.URLParam(r, "site-id")

	var handler = func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.GetEnterprisesEnterpriseSiteDeviceGroupList(w, r, target, enterpriseId, siteId)
	}

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler(w, r.WithContext(ctx))
}

// DeleteEnterprisesEnterpriseSiteDeviceGroup operation middleware
func (siw *ServerInterfaceWrapper) DeleteEnterprisesEnterpriseSiteDeviceGroup(w http.ResponseWriter, r *http.Request) {
	ctx := r.Context()

	var err error

	// ------------- Path parameter "target" -------------
	var target Target

	target = chi.URLParam(r, "target")

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = chi.URLParam(r, "enterprise-id")

	// ------------- Path parameter "site-id" -------------
	var siteId string

	siteId = chi.URLParam(r, "site-id")

	// ------------- Path parameter "device-group-id" -------------
	var deviceGroupId string

	deviceGroupId = chi.URLParam(r, "device-group-id")

	var handler = func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.DeleteEnterprisesEnterpriseSiteDeviceGroup(w, r, target, enterpriseId, siteId, deviceGroupId)
	}

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler(w, r.WithContext(ctx))
}

// GetEnterprisesEnterpriseSiteDeviceGroup operation middleware
func (siw *ServerInterfaceWrapper) GetEnterprisesEnterpriseSiteDeviceGroup(w http.ResponseWriter, r *http.Request) {
	ctx := r.Context()

	var err error

	// ------------- Path parameter "target" -------------
	var target Target

	target = chi.URLParam(r, "target")

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = chi.URLParam(r, "enterprise-id")

	// ------------- Path parameter "site-id" -------------
	var siteId string

	siteId = chi.URLParam(r, "site-id")

	// ------------- Path parameter "device-group-id" -------------
	var deviceGroupId string

	deviceGroupId = chi.URLParam(r, "device-group-id")

	var handler = func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.GetEnterprisesEnterpriseSiteDeviceGroup(w, r, target, enterpriseId, siteId, deviceGroupId)
	}

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler(w, r.WithContext(ctx))
}

// PostEnterprisesEnterpriseSiteDeviceGroup operation middleware
func (siw *ServerInterfaceWrapper) PostEnterprisesEnterpriseSiteDeviceGroup(w http.ResponseWriter, r *http.Request) {
	ctx := r.Context()

	var err error

	// ------------- Path parameter "target" -------------
	var target Target

	target = chi.URLParam(r, "target")

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = chi.URLParam(r, "enterprise-id")

	// ------------- Path parameter "site-id" -------------
	var siteId string

	siteId = chi.URLParam(r, "site-id")

	// ------------- Path parameter "device-group-id" -------------
	var deviceGroupId string

	deviceGroupId = chi.URLParam(r, "device-group-id")

	var handler = func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.PostEnterprisesEnterpriseSiteDeviceGroup(w, r, target, enterpriseId, siteId, deviceGroupId)
	}

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler(w, r.WithContext(ctx))
}

// GetEnterprisesEnterpriseSiteDeviceGroupDeviceList operation middleware
func (siw *ServerInterfaceWrapper) GetEnterprisesEnterpriseSiteDeviceGroupDeviceList(w http.ResponseWriter, r *http.Request) {
	ctx := r.Context()

	var err error

	// ------------- Path parameter "target" -------------
	var target Target

	target = chi.URLParam(r, "target")

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = chi.URLParam(r, "enterprise-id")

	// ------------- Path parameter "site-id" -------------
	var siteId string

	siteId = chi.URLParam(r, "site-id")

	// ------------- Path parameter "device-group-id" -------------
	var deviceGroupId string

	deviceGroupId = chi.URLParam(r, "device-group-id")

	var handler = func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.GetEnterprisesEnterpriseSiteDeviceGroupDeviceList(w, r, target, enterpriseId, siteId, deviceGroupId)
	}

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler(w, r.WithContext(ctx))
}

// DeleteEnterprisesEnterpriseSiteDeviceGroupDevice operation middleware
func (siw *ServerInterfaceWrapper) DeleteEnterprisesEnterpriseSiteDeviceGroupDevice(w http.ResponseWriter, r *http.Request) {
	ctx := r.Context()

	var err error

	// ------------- Path parameter "target" -------------
	var target Target

	target = chi.URLParam(r, "target")

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = chi.URLParam(r, "enterprise-id")

	// ------------- Path parameter "site-id" -------------
	var siteId string

	siteId = chi.URLParam(r, "site-id")

	// ------------- Path parameter "device-group-id" -------------
	var deviceGroupId string

	deviceGroupId = chi.URLParam(r, "device-group-id")

	// ------------- Path parameter "device-id" -------------
	var deviceId string

	deviceId = chi.URLParam(r, "device-id")

	var handler = func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.DeleteEnterprisesEnterpriseSiteDeviceGroupDevice(w, r, target, enterpriseId, siteId, deviceGroupId, deviceId)
	}

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler(w, r.WithContext(ctx))
}

// GetEnterprisesEnterpriseSiteDeviceGroupDevice operation middleware
func (siw *ServerInterfaceWrapper) GetEnterprisesEnterpriseSiteDeviceGroupDevice(w http.ResponseWriter, r *http.Request) {
	ctx := r.Context()

	var err error

	// ------------- Path parameter "target" -------------
	var target Target

	target = chi.URLParam(r, "target")

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = chi.URLParam(r, "enterprise-id")

	// ------------- Path parameter "site-id" -------------
	var siteId string

	siteId = chi.URLParam(r, "site-id")

	// ------------- Path parameter "device-group-id" -------------
	var deviceGroupId string

	deviceGroupId = chi.URLParam(r, "device-group-id")

	// ------------- Path parameter "device-id" -------------
	var deviceId string

	deviceId = chi.URLParam(r, "device-id")

	var handler = func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.GetEnterprisesEnterpriseSiteDeviceGroupDevice(w, r, target, enterpriseId, siteId, deviceGroupId, deviceId)
	}

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler(w, r.WithContext(ctx))
}

// PostEnterprisesEnterpriseSiteDeviceGroupDevice operation middleware
func (siw *ServerInterfaceWrapper) PostEnterprisesEnterpriseSiteDeviceGroupDevice(w http.ResponseWriter, r *http.Request) {
	ctx := r.Context()

	var err error

	// ------------- Path parameter "target" -------------
	var target Target

	target = chi.URLParam(r, "target")

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = chi.URLParam(r, "enterprise-id")

	// ------------- Path parameter "site-id" -------------
	var siteId string

	siteId = chi.URLParam(r, "site-id")

	// ------------- Path parameter "device-group-id" -------------
	var deviceGroupId string

	deviceGroupId = chi.URLParam(r, "device-group-id")

	// ------------- Path parameter "device-id" -------------
	var deviceId string

	deviceId = chi.URLParam(r, "device-id")

	var handler = func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.PostEnterprisesEnterpriseSiteDeviceGroupDevice(w, r, target, enterpriseId, siteId, deviceGroupId, deviceId)
	}

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler(w, r.WithContext(ctx))
}

// DeleteEnterprisesEnterpriseSiteDeviceGroupMbr operation middleware
func (siw *ServerInterfaceWrapper) DeleteEnterprisesEnterpriseSiteDeviceGroupMbr(w http.ResponseWriter, r *http.Request) {
	ctx := r.Context()

	var err error

	// ------------- Path parameter "target" -------------
	var target Target

	target = chi.URLParam(r, "target")

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = chi.URLParam(r, "enterprise-id")

	// ------------- Path parameter "site-id" -------------
	var siteId string

	siteId = chi.URLParam(r, "site-id")

	// ------------- Path parameter "device-group-id" -------------
	var deviceGroupId string

	deviceGroupId = chi.URLParam(r, "device-group-id")

	var handler = func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.DeleteEnterprisesEnterpriseSiteDeviceGroupMbr(w, r, target, enterpriseId, siteId, deviceGroupId)
	}

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler(w, r.WithContext(ctx))
}

// GetEnterprisesEnterpriseSiteDeviceGroupMbr operation middleware
func (siw *ServerInterfaceWrapper) GetEnterprisesEnterpriseSiteDeviceGroupMbr(w http.ResponseWriter, r *http.Request) {
	ctx := r.Context()

	var err error

	// ------------- Path parameter "target" -------------
	var target Target

	target = chi.URLParam(r, "target")

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = chi.URLParam(r, "enterprise-id")

	// ------------- Path parameter "site-id" -------------
	var siteId string

	siteId = chi.URLParam(r, "site-id")

	// ------------- Path parameter "device-group-id" -------------
	var deviceGroupId string

	deviceGroupId = chi.URLParam(r, "device-group-id")

	var handler = func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.GetEnterprisesEnterpriseSiteDeviceGroupMbr(w, r, target, enterpriseId, siteId, deviceGroupId)
	}

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler(w, r.WithContext(ctx))
}

// PostEnterprisesEnterpriseSiteDeviceGroupMbr operation middleware
func (siw *ServerInterfaceWrapper) PostEnterprisesEnterpriseSiteDeviceGroupMbr(w http.ResponseWriter, r *http.Request) {
	ctx := r.Context()

	var err error

	// ------------- Path parameter "target" -------------
	var target Target

	target = chi.URLParam(r, "target")

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = chi.URLParam(r, "enterprise-id")

	// ------------- Path parameter "site-id" -------------
	var siteId string

	siteId = chi.URLParam(r, "site-id")

	// ------------- Path parameter "device-group-id" -------------
	var deviceGroupId string

	deviceGroupId = chi.URLParam(r, "device-group-id")

	var handler = func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.PostEnterprisesEnterpriseSiteDeviceGroupMbr(w, r, target, enterpriseId, siteId, deviceGroupId)
	}

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler(w, r.WithContext(ctx))
}

// DeleteEnterprisesEnterpriseSiteDevice operation middleware
func (siw *ServerInterfaceWrapper) DeleteEnterprisesEnterpriseSiteDevice(w http.ResponseWriter, r *http.Request) {
	ctx := r.Context()

	var err error

	// ------------- Path parameter "target" -------------
	var target Target

	target = chi.URLParam(r, "target")

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = chi.URLParam(r, "enterprise-id")

	// ------------- Path parameter "site-id" -------------
	var siteId string

	siteId = chi.URLParam(r, "site-id")

	// ------------- Path parameter "device-id" -------------
	var deviceId string

	deviceId = chi.URLParam(r, "device-id")

	var handler = func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.DeleteEnterprisesEnterpriseSiteDevice(w, r, target, enterpriseId, siteId, deviceId)
	}

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler(w, r.WithContext(ctx))
}

// GetEnterprisesEnterpriseSiteDevice operation middleware
func (siw *ServerInterfaceWrapper) GetEnterprisesEnterpriseSiteDevice(w http.ResponseWriter, r *http.Request) {
	ctx := r.Context()

	var err error

	// ------------- Path parameter "target" -------------
	var target Target

	target = chi.URLParam(r, "target")

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = chi.URLParam(r, "enterprise-id")

	// ------------- Path parameter "site-id" -------------
	var siteId string

	siteId = chi.URLParam(r, "site-id")

	// ------------- Path parameter "device-id" -------------
	var deviceId string

	deviceId = chi.URLParam(r, "device-id")

	var handler = func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.GetEnterprisesEnterpriseSiteDevice(w, r, target, enterpriseId, siteId, deviceId)
	}

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler(w, r.WithContext(ctx))
}

// PostEnterprisesEnterpriseSiteDevice operation middleware
func (siw *ServerInterfaceWrapper) PostEnterprisesEnterpriseSiteDevice(w http.ResponseWriter, r *http.Request) {
	ctx := r.Context()

	var err error

	// ------------- Path parameter "target" -------------
	var target Target

	target = chi.URLParam(r, "target")

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = chi.URLParam(r, "enterprise-id")

	// ------------- Path parameter "site-id" -------------
	var siteId string

	siteId = chi.URLParam(r, "site-id")

	// ------------- Path parameter "device-id" -------------
	var deviceId string

	deviceId = chi.URLParam(r, "device-id")

	var handler = func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.PostEnterprisesEnterpriseSiteDevice(w, r, target, enterpriseId, siteId, deviceId)
	}

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler(w, r.WithContext(ctx))
}

// DeleteEnterprisesEnterpriseSiteImsiDefinition operation middleware
func (siw *ServerInterfaceWrapper) DeleteEnterprisesEnterpriseSiteImsiDefinition(w http.ResponseWriter, r *http.Request) {
	ctx := r.Context()

	var err error

	// ------------- Path parameter "target" -------------
	var target Target

	target = chi.URLParam(r, "target")

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = chi.URLParam(r, "enterprise-id")

	// ------------- Path parameter "site-id" -------------
	var siteId string

	siteId = chi.URLParam(r, "site-id")

	var handler = func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.DeleteEnterprisesEnterpriseSiteImsiDefinition(w, r, target, enterpriseId, siteId)
	}

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler(w, r.WithContext(ctx))
}

// GetEnterprisesEnterpriseSiteImsiDefinition operation middleware
func (siw *ServerInterfaceWrapper) GetEnterprisesEnterpriseSiteImsiDefinition(w http.ResponseWriter, r *http.Request) {
	ctx := r.Context()

	var err error

	// ------------- Path parameter "target" -------------
	var target Target

	target = chi.URLParam(r, "target")

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = chi.URLParam(r, "enterprise-id")

	// ------------- Path parameter "site-id" -------------
	var siteId string

	siteId = chi.URLParam(r, "site-id")

	var handler = func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.GetEnterprisesEnterpriseSiteImsiDefinition(w, r, target, enterpriseId, siteId)
	}

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler(w, r.WithContext(ctx))
}

// PostEnterprisesEnterpriseSiteImsiDefinition operation middleware
func (siw *ServerInterfaceWrapper) PostEnterprisesEnterpriseSiteImsiDefinition(w http.ResponseWriter, r *http.Request) {
	ctx := r.Context()

	var err error

	// ------------- Path parameter "target" -------------
	var target Target

	target = chi.URLParam(r, "target")

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = chi.URLParam(r, "enterprise-id")

	// ------------- Path parameter "site-id" -------------
	var siteId string

	siteId = chi.URLParam(r, "site-id")

	var handler = func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.PostEnterprisesEnterpriseSiteImsiDefinition(w, r, target, enterpriseId, siteId)
	}

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler(w, r.WithContext(ctx))
}

// GetEnterprisesEnterpriseSiteIpDomainList operation middleware
func (siw *ServerInterfaceWrapper) GetEnterprisesEnterpriseSiteIpDomainList(w http.ResponseWriter, r *http.Request) {
	ctx := r.Context()

	var err error

	// ------------- Path parameter "target" -------------
	var target Target

	target = chi.URLParam(r, "target")

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = chi.URLParam(r, "enterprise-id")

	// ------------- Path parameter "site-id" -------------
	var siteId string

	siteId = chi.URLParam(r, "site-id")

	var handler = func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.GetEnterprisesEnterpriseSiteIpDomainList(w, r, target, enterpriseId, siteId)
	}

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler(w, r.WithContext(ctx))
}

// DeleteEnterprisesEnterpriseSiteIpDomain operation middleware
func (siw *ServerInterfaceWrapper) DeleteEnterprisesEnterpriseSiteIpDomain(w http.ResponseWriter, r *http.Request) {
	ctx := r.Context()

	var err error

	// ------------- Path parameter "target" -------------
	var target Target

	target = chi.URLParam(r, "target")

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = chi.URLParam(r, "enterprise-id")

	// ------------- Path parameter "site-id" -------------
	var siteId string

	siteId = chi.URLParam(r, "site-id")

	// ------------- Path parameter "ip-domain-id" -------------
	var ipDomainId string

	ipDomainId = chi.URLParam(r, "ip-domain-id")

	var handler = func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.DeleteEnterprisesEnterpriseSiteIpDomain(w, r, target, enterpriseId, siteId, ipDomainId)
	}

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler(w, r.WithContext(ctx))
}

// GetEnterprisesEnterpriseSiteIpDomain operation middleware
func (siw *ServerInterfaceWrapper) GetEnterprisesEnterpriseSiteIpDomain(w http.ResponseWriter, r *http.Request) {
	ctx := r.Context()

	var err error

	// ------------- Path parameter "target" -------------
	var target Target

	target = chi.URLParam(r, "target")

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = chi.URLParam(r, "enterprise-id")

	// ------------- Path parameter "site-id" -------------
	var siteId string

	siteId = chi.URLParam(r, "site-id")

	// ------------- Path parameter "ip-domain-id" -------------
	var ipDomainId string

	ipDomainId = chi.URLParam(r, "ip-domain-id")

	var handler = func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.GetEnterprisesEnterpriseSiteIpDomain(w, r, target, enterpriseId, siteId, ipDomainId)
	}

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler(w, r.WithContext(ctx))
}

// PostEnterprisesEnterpriseSiteIpDomain operation middleware
func (siw *ServerInterfaceWrapper) PostEnterprisesEnterpriseSiteIpDomain(w http.ResponseWriter, r *http.Request) {
	ctx := r.Context()

	var err error

	// ------------- Path parameter "target" -------------
	var target Target

	target = chi.URLParam(r, "target")

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = chi.URLParam(r, "enterprise-id")

	// ------------- Path parameter "site-id" -------------
	var siteId string

	siteId = chi.URLParam(r, "site-id")

	// ------------- Path parameter "ip-domain-id" -------------
	var ipDomainId string

	ipDomainId = chi.URLParam(r, "ip-domain-id")

	var handler = func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.PostEnterprisesEnterpriseSiteIpDomain(w, r, target, enterpriseId, siteId, ipDomainId)
	}

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler(w, r.WithContext(ctx))
}

// DeleteEnterprisesEnterpriseSiteMonitoring operation middleware
func (siw *ServerInterfaceWrapper) DeleteEnterprisesEnterpriseSiteMonitoring(w http.ResponseWriter, r *http.Request) {
	ctx := r.Context()

	var err error

	// ------------- Path parameter "target" -------------
	var target Target

	target = chi.URLParam(r, "target")

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = chi.URLParam(r, "enterprise-id")

	// ------------- Path parameter "site-id" -------------
	var siteId string

	siteId = chi.URLParam(r, "site-id")

	var handler = func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.DeleteEnterprisesEnterpriseSiteMonitoring(w, r, target, enterpriseId, siteId)
	}

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler(w, r.WithContext(ctx))
}

// GetEnterprisesEnterpriseSiteMonitoring operation middleware
func (siw *ServerInterfaceWrapper) GetEnterprisesEnterpriseSiteMonitoring(w http.ResponseWriter, r *http.Request) {
	ctx := r.Context()

	var err error

	// ------------- Path parameter "target" -------------
	var target Target

	target = chi.URLParam(r, "target")

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = chi.URLParam(r, "enterprise-id")

	// ------------- Path parameter "site-id" -------------
	var siteId string

	siteId = chi.URLParam(r, "site-id")

	var handler = func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.GetEnterprisesEnterpriseSiteMonitoring(w, r, target, enterpriseId, siteId)
	}

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler(w, r.WithContext(ctx))
}

// PostEnterprisesEnterpriseSiteMonitoring operation middleware
func (siw *ServerInterfaceWrapper) PostEnterprisesEnterpriseSiteMonitoring(w http.ResponseWriter, r *http.Request) {
	ctx := r.Context()

	var err error

	// ------------- Path parameter "target" -------------
	var target Target

	target = chi.URLParam(r, "target")

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = chi.URLParam(r, "enterprise-id")

	// ------------- Path parameter "site-id" -------------
	var siteId string

	siteId = chi.URLParam(r, "site-id")

	var handler = func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.PostEnterprisesEnterpriseSiteMonitoring(w, r, target, enterpriseId, siteId)
	}

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler(w, r.WithContext(ctx))
}

// GetEnterprisesEnterpriseSiteMonitoringEdgeDeviceList operation middleware
func (siw *ServerInterfaceWrapper) GetEnterprisesEnterpriseSiteMonitoringEdgeDeviceList(w http.ResponseWriter, r *http.Request) {
	ctx := r.Context()

	var err error

	// ------------- Path parameter "target" -------------
	var target Target

	target = chi.URLParam(r, "target")

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = chi.URLParam(r, "enterprise-id")

	// ------------- Path parameter "site-id" -------------
	var siteId string

	siteId = chi.URLParam(r, "site-id")

	var handler = func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.GetEnterprisesEnterpriseSiteMonitoringEdgeDeviceList(w, r, target, enterpriseId, siteId)
	}

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler(w, r.WithContext(ctx))
}

// DeleteEnterprisesEnterpriseSiteMonitoringEdgeDevice operation middleware
func (siw *ServerInterfaceWrapper) DeleteEnterprisesEnterpriseSiteMonitoringEdgeDevice(w http.ResponseWriter, r *http.Request) {
	ctx := r.Context()

	var err error

	// ------------- Path parameter "target" -------------
	var target Target

	target = chi.URLParam(r, "target")

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = chi.URLParam(r, "enterprise-id")

	// ------------- Path parameter "site-id" -------------
	var siteId string

	siteId = chi.URLParam(r, "site-id")

	// ------------- Path parameter "edge-device-id" -------------
	var edgeDeviceId string

	edgeDeviceId = chi.URLParam(r, "edge-device-id")

	var handler = func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.DeleteEnterprisesEnterpriseSiteMonitoringEdgeDevice(w, r, target, enterpriseId, siteId, edgeDeviceId)
	}

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler(w, r.WithContext(ctx))
}

// GetEnterprisesEnterpriseSiteMonitoringEdgeDevice operation middleware
func (siw *ServerInterfaceWrapper) GetEnterprisesEnterpriseSiteMonitoringEdgeDevice(w http.ResponseWriter, r *http.Request) {
	ctx := r.Context()

	var err error

	// ------------- Path parameter "target" -------------
	var target Target

	target = chi.URLParam(r, "target")

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = chi.URLParam(r, "enterprise-id")

	// ------------- Path parameter "site-id" -------------
	var siteId string

	siteId = chi.URLParam(r, "site-id")

	// ------------- Path parameter "edge-device-id" -------------
	var edgeDeviceId string

	edgeDeviceId = chi.URLParam(r, "edge-device-id")

	var handler = func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.GetEnterprisesEnterpriseSiteMonitoringEdgeDevice(w, r, target, enterpriseId, siteId, edgeDeviceId)
	}

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler(w, r.WithContext(ctx))
}

// PostEnterprisesEnterpriseSiteMonitoringEdgeDevice operation middleware
func (siw *ServerInterfaceWrapper) PostEnterprisesEnterpriseSiteMonitoringEdgeDevice(w http.ResponseWriter, r *http.Request) {
	ctx := r.Context()

	var err error

	// ------------- Path parameter "target" -------------
	var target Target

	target = chi.URLParam(r, "target")

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = chi.URLParam(r, "enterprise-id")

	// ------------- Path parameter "site-id" -------------
	var siteId string

	siteId = chi.URLParam(r, "site-id")

	// ------------- Path parameter "edge-device-id" -------------
	var edgeDeviceId string

	edgeDeviceId = chi.URLParam(r, "edge-device-id")

	var handler = func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.PostEnterprisesEnterpriseSiteMonitoringEdgeDevice(w, r, target, enterpriseId, siteId, edgeDeviceId)
	}

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler(w, r.WithContext(ctx))
}

// GetEnterprisesEnterpriseSiteSimCardList operation middleware
func (siw *ServerInterfaceWrapper) GetEnterprisesEnterpriseSiteSimCardList(w http.ResponseWriter, r *http.Request) {
	ctx := r.Context()

	var err error

	// ------------- Path parameter "target" -------------
	var target Target

	target = chi.URLParam(r, "target")

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = chi.URLParam(r, "enterprise-id")

	// ------------- Path parameter "site-id" -------------
	var siteId string

	siteId = chi.URLParam(r, "site-id")

	var handler = func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.GetEnterprisesEnterpriseSiteSimCardList(w, r, target, enterpriseId, siteId)
	}

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler(w, r.WithContext(ctx))
}

// DeleteEnterprisesEnterpriseSiteSimCard operation middleware
func (siw *ServerInterfaceWrapper) DeleteEnterprisesEnterpriseSiteSimCard(w http.ResponseWriter, r *http.Request) {
	ctx := r.Context()

	var err error

	// ------------- Path parameter "target" -------------
	var target Target

	target = chi.URLParam(r, "target")

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = chi.URLParam(r, "enterprise-id")

	// ------------- Path parameter "site-id" -------------
	var siteId string

	siteId = chi.URLParam(r, "site-id")

	// ------------- Path parameter "sim-id" -------------
	var simId string

	simId = chi.URLParam(r, "sim-id")

	var handler = func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.DeleteEnterprisesEnterpriseSiteSimCard(w, r, target, enterpriseId, siteId, simId)
	}

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler(w, r.WithContext(ctx))
}

// GetEnterprisesEnterpriseSiteSimCard operation middleware
func (siw *ServerInterfaceWrapper) GetEnterprisesEnterpriseSiteSimCard(w http.ResponseWriter, r *http.Request) {
	ctx := r.Context()

	var err error

	// ------------- Path parameter "target" -------------
	var target Target

	target = chi.URLParam(r, "target")

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = chi.URLParam(r, "enterprise-id")

	// ------------- Path parameter "site-id" -------------
	var siteId string

	siteId = chi.URLParam(r, "site-id")

	// ------------- Path parameter "sim-id" -------------
	var simId string

	simId = chi.URLParam(r, "sim-id")

	var handler = func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.GetEnterprisesEnterpriseSiteSimCard(w, r, target, enterpriseId, siteId, simId)
	}

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler(w, r.WithContext(ctx))
}

// PostEnterprisesEnterpriseSiteSimCard operation middleware
func (siw *ServerInterfaceWrapper) PostEnterprisesEnterpriseSiteSimCard(w http.ResponseWriter, r *http.Request) {
	ctx := r.Context()

	var err error

	// ------------- Path parameter "target" -------------
	var target Target

	target = chi.URLParam(r, "target")

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = chi.URLParam(r, "enterprise-id")

	// ------------- Path parameter "site-id" -------------
	var siteId string

	siteId = chi.URLParam(r, "site-id")

	// ------------- Path parameter "sim-id" -------------
	var simId string

	simId = chi.URLParam(r, "sim-id")

	var handler = func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.PostEnterprisesEnterpriseSiteSimCard(w, r, target, enterpriseId, siteId, simId)
	}

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler(w, r.WithContext(ctx))
}

// GetEnterprisesEnterpriseSiteSliceList operation middleware
func (siw *ServerInterfaceWrapper) GetEnterprisesEnterpriseSiteSliceList(w http.ResponseWriter, r *http.Request) {
	ctx := r.Context()

	var err error

	// ------------- Path parameter "target" -------------
	var target Target

	target = chi.URLParam(r, "target")

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = chi.URLParam(r, "enterprise-id")

	// ------------- Path parameter "site-id" -------------
	var siteId string

	siteId = chi.URLParam(r, "site-id")

	var handler = func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.GetEnterprisesEnterpriseSiteSliceList(w, r, target, enterpriseId, siteId)
	}

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler(w, r.WithContext(ctx))
}

// DeleteEnterprisesEnterpriseSiteSlice operation middleware
func (siw *ServerInterfaceWrapper) DeleteEnterprisesEnterpriseSiteSlice(w http.ResponseWriter, r *http.Request) {
	ctx := r.Context()

	var err error

	// ------------- Path parameter "target" -------------
	var target Target

	target = chi.URLParam(r, "target")

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = chi.URLParam(r, "enterprise-id")

	// ------------- Path parameter "site-id" -------------
	var siteId string

	siteId = chi.URLParam(r, "site-id")

	// ------------- Path parameter "slice-id" -------------
	var sliceId string

	sliceId = chi.URLParam(r, "slice-id")

	var handler = func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.DeleteEnterprisesEnterpriseSiteSlice(w, r, target, enterpriseId, siteId, sliceId)
	}

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler(w, r.WithContext(ctx))
}

// GetEnterprisesEnterpriseSiteSlice operation middleware
func (siw *ServerInterfaceWrapper) GetEnterprisesEnterpriseSiteSlice(w http.ResponseWriter, r *http.Request) {
	ctx := r.Context()

	var err error

	// ------------- Path parameter "target" -------------
	var target Target

	target = chi.URLParam(r, "target")

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = chi.URLParam(r, "enterprise-id")

	// ------------- Path parameter "site-id" -------------
	var siteId string

	siteId = chi.URLParam(r, "site-id")

	// ------------- Path parameter "slice-id" -------------
	var sliceId string

	sliceId = chi.URLParam(r, "slice-id")

	var handler = func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.GetEnterprisesEnterpriseSiteSlice(w, r, target, enterpriseId, siteId, sliceId)
	}

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler(w, r.WithContext(ctx))
}

// PostEnterprisesEnterpriseSiteSlice operation middleware
func (siw *ServerInterfaceWrapper) PostEnterprisesEnterpriseSiteSlice(w http.ResponseWriter, r *http.Request) {
	ctx := r.Context()

	var err error

	// ------------- Path parameter "target" -------------
	var target Target

	target = chi.URLParam(r, "target")

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = chi.URLParam(r, "enterprise-id")

	// ------------- Path parameter "site-id" -------------
	var siteId string

	siteId = chi.URLParam(r, "site-id")

	// ------------- Path parameter "slice-id" -------------
	var sliceId string

	sliceId = chi.URLParam(r, "slice-id")

	var handler = func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.PostEnterprisesEnterpriseSiteSlice(w, r, target, enterpriseId, siteId, sliceId)
	}

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler(w, r.WithContext(ctx))
}

// GetEnterprisesEnterpriseSiteSliceDeviceGroupList operation middleware
func (siw *ServerInterfaceWrapper) GetEnterprisesEnterpriseSiteSliceDeviceGroupList(w http.ResponseWriter, r *http.Request) {
	ctx := r.Context()

	var err error

	// ------------- Path parameter "target" -------------
	var target Target

	target = chi.URLParam(r, "target")

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = chi.URLParam(r, "enterprise-id")

	// ------------- Path parameter "site-id" -------------
	var siteId string

	siteId = chi.URLParam(r, "site-id")

	// ------------- Path parameter "slice-id" -------------
	var sliceId string

	sliceId = chi.URLParam(r, "slice-id")

	var handler = func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.GetEnterprisesEnterpriseSiteSliceDeviceGroupList(w, r, target, enterpriseId, siteId, sliceId)
	}

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler(w, r.WithContext(ctx))
}

// DeleteEnterprisesEnterpriseSiteSliceDeviceGroup operation middleware
func (siw *ServerInterfaceWrapper) DeleteEnterprisesEnterpriseSiteSliceDeviceGroup(w http.ResponseWriter, r *http.Request) {
	ctx := r.Context()

	var err error

	// ------------- Path parameter "target" -------------
	var target Target

	target = chi.URLParam(r, "target")

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = chi.URLParam(r, "enterprise-id")

	// ------------- Path parameter "site-id" -------------
	var siteId string

	siteId = chi.URLParam(r, "site-id")

	// ------------- Path parameter "slice-id" -------------
	var sliceId string

	sliceId = chi.URLParam(r, "slice-id")

	// ------------- Path parameter "device-group" -------------
	var deviceGroup string

	deviceGroup = chi.URLParam(r, "device-group")

	var handler = func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.DeleteEnterprisesEnterpriseSiteSliceDeviceGroup(w, r, target, enterpriseId, siteId, sliceId, deviceGroup)
	}

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler(w, r.WithContext(ctx))
}

// GetEnterprisesEnterpriseSiteSliceDeviceGroup operation middleware
func (siw *ServerInterfaceWrapper) GetEnterprisesEnterpriseSiteSliceDeviceGroup(w http.ResponseWriter, r *http.Request) {
	ctx := r.Context()

	var err error

	// ------------- Path parameter "target" -------------
	var target Target

	target = chi.URLParam(r, "target")

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = chi.URLParam(r, "enterprise-id")

	// ------------- Path parameter "site-id" -------------
	var siteId string

	siteId = chi.URLParam(r, "site-id")

	// ------------- Path parameter "slice-id" -------------
	var sliceId string

	sliceId = chi.URLParam(r, "slice-id")

	// ------------- Path parameter "device-group" -------------
	var deviceGroup string

	deviceGroup = chi.URLParam(r, "device-group")

	var handler = func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.GetEnterprisesEnterpriseSiteSliceDeviceGroup(w, r, target, enterpriseId, siteId, sliceId, deviceGroup)
	}

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler(w, r.WithContext(ctx))
}

// PostEnterprisesEnterpriseSiteSliceDeviceGroup operation middleware
func (siw *ServerInterfaceWrapper) PostEnterprisesEnterpriseSiteSliceDeviceGroup(w http.ResponseWriter, r *http.Request) {
	ctx := r.Context()

	var err error

	// ------------- Path parameter "target" -------------
	var target Target

	target = chi.URLParam(r, "target")

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = chi.URLParam(r, "enterprise-id")

	// ------------- Path parameter "site-id" -------------
	var siteId string

	siteId = chi.URLParam(r, "site-id")

	// ------------- Path parameter "slice-id" -------------
	var sliceId string

	sliceId = chi.URLParam(r, "slice-id")

	// ------------- Path parameter "device-group" -------------
	var deviceGroup string

	deviceGroup = chi.URLParam(r, "device-group")

	var handler = func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.PostEnterprisesEnterpriseSiteSliceDeviceGroup(w, r, target, enterpriseId, siteId, sliceId, deviceGroup)
	}

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler(w, r.WithContext(ctx))
}

// GetEnterprisesEnterpriseSiteSliceFilterList operation middleware
func (siw *ServerInterfaceWrapper) GetEnterprisesEnterpriseSiteSliceFilterList(w http.ResponseWriter, r *http.Request) {
	ctx := r.Context()

	var err error

	// ------------- Path parameter "target" -------------
	var target Target

	target = chi.URLParam(r, "target")

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = chi.URLParam(r, "enterprise-id")

	// ------------- Path parameter "site-id" -------------
	var siteId string

	siteId = chi.URLParam(r, "site-id")

	// ------------- Path parameter "slice-id" -------------
	var sliceId string

	sliceId = chi.URLParam(r, "slice-id")

	var handler = func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.GetEnterprisesEnterpriseSiteSliceFilterList(w, r, target, enterpriseId, siteId, sliceId)
	}

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler(w, r.WithContext(ctx))
}

// DeleteEnterprisesEnterpriseSiteSliceFilter operation middleware
func (siw *ServerInterfaceWrapper) DeleteEnterprisesEnterpriseSiteSliceFilter(w http.ResponseWriter, r *http.Request) {
	ctx := r.Context()

	var err error

	// ------------- Path parameter "target" -------------
	var target Target

	target = chi.URLParam(r, "target")

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = chi.URLParam(r, "enterprise-id")

	// ------------- Path parameter "site-id" -------------
	var siteId string

	siteId = chi.URLParam(r, "site-id")

	// ------------- Path parameter "slice-id" -------------
	var sliceId string

	sliceId = chi.URLParam(r, "slice-id")

	// ------------- Path parameter "application" -------------
	var application string

	application = chi.URLParam(r, "application")

	var handler = func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.DeleteEnterprisesEnterpriseSiteSliceFilter(w, r, target, enterpriseId, siteId, sliceId, application)
	}

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler(w, r.WithContext(ctx))
}

// GetEnterprisesEnterpriseSiteSliceFilter operation middleware
func (siw *ServerInterfaceWrapper) GetEnterprisesEnterpriseSiteSliceFilter(w http.ResponseWriter, r *http.Request) {
	ctx := r.Context()

	var err error

	// ------------- Path parameter "target" -------------
	var target Target

	target = chi.URLParam(r, "target")

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = chi.URLParam(r, "enterprise-id")

	// ------------- Path parameter "site-id" -------------
	var siteId string

	siteId = chi.URLParam(r, "site-id")

	// ------------- Path parameter "slice-id" -------------
	var sliceId string

	sliceId = chi.URLParam(r, "slice-id")

	// ------------- Path parameter "application" -------------
	var application string

	application = chi.URLParam(r, "application")

	var handler = func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.GetEnterprisesEnterpriseSiteSliceFilter(w, r, target, enterpriseId, siteId, sliceId, application)
	}

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler(w, r.WithContext(ctx))
}

// PostEnterprisesEnterpriseSiteSliceFilter operation middleware
func (siw *ServerInterfaceWrapper) PostEnterprisesEnterpriseSiteSliceFilter(w http.ResponseWriter, r *http.Request) {
	ctx := r.Context()

	var err error

	// ------------- Path parameter "target" -------------
	var target Target

	target = chi.URLParam(r, "target")

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = chi.URLParam(r, "enterprise-id")

	// ------------- Path parameter "site-id" -------------
	var siteId string

	siteId = chi.URLParam(r, "site-id")

	// ------------- Path parameter "slice-id" -------------
	var sliceId string

	sliceId = chi.URLParam(r, "slice-id")

	// ------------- Path parameter "application" -------------
	var application string

	application = chi.URLParam(r, "application")

	var handler = func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.PostEnterprisesEnterpriseSiteSliceFilter(w, r, target, enterpriseId, siteId, sliceId, application)
	}

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler(w, r.WithContext(ctx))
}

// DeleteEnterprisesEnterpriseSiteSliceMbr operation middleware
func (siw *ServerInterfaceWrapper) DeleteEnterprisesEnterpriseSiteSliceMbr(w http.ResponseWriter, r *http.Request) {
	ctx := r.Context()

	var err error

	// ------------- Path parameter "target" -------------
	var target Target

	target = chi.URLParam(r, "target")

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = chi.URLParam(r, "enterprise-id")

	// ------------- Path parameter "site-id" -------------
	var siteId string

	siteId = chi.URLParam(r, "site-id")

	// ------------- Path parameter "slice-id" -------------
	var sliceId string

	sliceId = chi.URLParam(r, "slice-id")

	var handler = func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.DeleteEnterprisesEnterpriseSiteSliceMbr(w, r, target, enterpriseId, siteId, sliceId)
	}

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler(w, r.WithContext(ctx))
}

// GetEnterprisesEnterpriseSiteSliceMbr operation middleware
func (siw *ServerInterfaceWrapper) GetEnterprisesEnterpriseSiteSliceMbr(w http.ResponseWriter, r *http.Request) {
	ctx := r.Context()

	var err error

	// ------------- Path parameter "target" -------------
	var target Target

	target = chi.URLParam(r, "target")

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = chi.URLParam(r, "enterprise-id")

	// ------------- Path parameter "site-id" -------------
	var siteId string

	siteId = chi.URLParam(r, "site-id")

	// ------------- Path parameter "slice-id" -------------
	var sliceId string

	sliceId = chi.URLParam(r, "slice-id")

	var handler = func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.GetEnterprisesEnterpriseSiteSliceMbr(w, r, target, enterpriseId, siteId, sliceId)
	}

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler(w, r.WithContext(ctx))
}

// PostEnterprisesEnterpriseSiteSliceMbr operation middleware
func (siw *ServerInterfaceWrapper) PostEnterprisesEnterpriseSiteSliceMbr(w http.ResponseWriter, r *http.Request) {
	ctx := r.Context()

	var err error

	// ------------- Path parameter "target" -------------
	var target Target

	target = chi.URLParam(r, "target")

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = chi.URLParam(r, "enterprise-id")

	// ------------- Path parameter "site-id" -------------
	var siteId string

	siteId = chi.URLParam(r, "site-id")

	// ------------- Path parameter "slice-id" -------------
	var sliceId string

	sliceId = chi.URLParam(r, "slice-id")

	var handler = func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.PostEnterprisesEnterpriseSiteSliceMbr(w, r, target, enterpriseId, siteId, sliceId)
	}

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler(w, r.WithContext(ctx))
}

// GetEnterprisesEnterpriseSiteSlicePriorityTrafficRuleList operation middleware
func (siw *ServerInterfaceWrapper) GetEnterprisesEnterpriseSiteSlicePriorityTrafficRuleList(w http.ResponseWriter, r *http.Request) {
	ctx := r.Context()

	var err error

	// ------------- Path parameter "target" -------------
	var target Target

	target = chi.URLParam(r, "target")

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = chi.URLParam(r, "enterprise-id")

	// ------------- Path parameter "site-id" -------------
	var siteId string

	siteId = chi.URLParam(r, "site-id")

	// ------------- Path parameter "slice-id" -------------
	var sliceId string

	sliceId = chi.URLParam(r, "slice-id")

	var handler = func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.GetEnterprisesEnterpriseSiteSlicePriorityTrafficRuleList(w, r, target, enterpriseId, siteId, sliceId)
	}

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler(w, r.WithContext(ctx))
}

// DeleteEnterprisesEnterpriseSiteSlicePriorityTrafficRule operation middleware
func (siw *ServerInterfaceWrapper) DeleteEnterprisesEnterpriseSiteSlicePriorityTrafficRule(w http.ResponseWriter, r *http.Request) {
	ctx := r.Context()

	var err error

	// ------------- Path parameter "target" -------------
	var target Target

	target = chi.URLParam(r, "target")

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = chi.URLParam(r, "enterprise-id")

	// ------------- Path parameter "site-id" -------------
	var siteId string

	siteId = chi.URLParam(r, "site-id")

	// ------------- Path parameter "slice-id" -------------
	var sliceId string

	sliceId = chi.URLParam(r, "slice-id")

	// ------------- Path parameter "priority-traffic-rule-id" -------------
	var priorityTrafficRuleId string

	priorityTrafficRuleId = chi.URLParam(r, "priority-traffic-rule-id")

	var handler = func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.DeleteEnterprisesEnterpriseSiteSlicePriorityTrafficRule(w, r, target, enterpriseId, siteId, sliceId, priorityTrafficRuleId)
	}

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler(w, r.WithContext(ctx))
}

// GetEnterprisesEnterpriseSiteSlicePriorityTrafficRule operation middleware
func (siw *ServerInterfaceWrapper) GetEnterprisesEnterpriseSiteSlicePriorityTrafficRule(w http.ResponseWriter, r *http.Request) {
	ctx := r.Context()

	var err error

	// ------------- Path parameter "target" -------------
	var target Target

	target = chi.URLParam(r, "target")

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = chi.URLParam(r, "enterprise-id")

	// ------------- Path parameter "site-id" -------------
	var siteId string

	siteId = chi.URLParam(r, "site-id")

	// ------------- Path parameter "slice-id" -------------
	var sliceId string

	sliceId = chi.URLParam(r, "slice-id")

	// ------------- Path parameter "priority-traffic-rule-id" -------------
	var priorityTrafficRuleId string

	priorityTrafficRuleId = chi.URLParam(r, "priority-traffic-rule-id")

	var handler = func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.GetEnterprisesEnterpriseSiteSlicePriorityTrafficRule(w, r, target, enterpriseId, siteId, sliceId, priorityTrafficRuleId)
	}

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler(w, r.WithContext(ctx))
}

// PostEnterprisesEnterpriseSiteSlicePriorityTrafficRule operation middleware
func (siw *ServerInterfaceWrapper) PostEnterprisesEnterpriseSiteSlicePriorityTrafficRule(w http.ResponseWriter, r *http.Request) {
	ctx := r.Context()

	var err error

	// ------------- Path parameter "target" -------------
	var target Target

	target = chi.URLParam(r, "target")

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = chi.URLParam(r, "enterprise-id")

	// ------------- Path parameter "site-id" -------------
	var siteId string

	siteId = chi.URLParam(r, "site-id")

	// ------------- Path parameter "slice-id" -------------
	var sliceId string

	sliceId = chi.URLParam(r, "slice-id")

	// ------------- Path parameter "priority-traffic-rule-id" -------------
	var priorityTrafficRuleId string

	priorityTrafficRuleId = chi.URLParam(r, "priority-traffic-rule-id")

	var handler = func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.PostEnterprisesEnterpriseSiteSlicePriorityTrafficRule(w, r, target, enterpriseId, siteId, sliceId, priorityTrafficRuleId)
	}

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler(w, r.WithContext(ctx))
}

// GetEnterprisesEnterpriseSiteSmallCellList operation middleware
func (siw *ServerInterfaceWrapper) GetEnterprisesEnterpriseSiteSmallCellList(w http.ResponseWriter, r *http.Request) {
	ctx := r.Context()

	var err error

	// ------------- Path parameter "target" -------------
	var target Target

	target = chi.URLParam(r, "target")

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = chi.URLParam(r, "enterprise-id")

	// ------------- Path parameter "site-id" -------------
	var siteId string

	siteId = chi.URLParam(r, "site-id")

	var handler = func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.GetEnterprisesEnterpriseSiteSmallCellList(w, r, target, enterpriseId, siteId)
	}

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler(w, r.WithContext(ctx))
}

// DeleteEnterprisesEnterpriseSiteSmallCell operation middleware
func (siw *ServerInterfaceWrapper) DeleteEnterprisesEnterpriseSiteSmallCell(w http.ResponseWriter, r *http.Request) {
	ctx := r.Context()

	var err error

	// ------------- Path parameter "target" -------------
	var target Target

	target = chi.URLParam(r, "target")

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = chi.URLParam(r, "enterprise-id")

	// ------------- Path parameter "site-id" -------------
	var siteId string

	siteId = chi.URLParam(r, "site-id")

	// ------------- Path parameter "small-cell-id" -------------
	var smallCellId string

	smallCellId = chi.URLParam(r, "small-cell-id")

	var handler = func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.DeleteEnterprisesEnterpriseSiteSmallCell(w, r, target, enterpriseId, siteId, smallCellId)
	}

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler(w, r.WithContext(ctx))
}

// GetEnterprisesEnterpriseSiteSmallCell operation middleware
func (siw *ServerInterfaceWrapper) GetEnterprisesEnterpriseSiteSmallCell(w http.ResponseWriter, r *http.Request) {
	ctx := r.Context()

	var err error

	// ------------- Path parameter "target" -------------
	var target Target

	target = chi.URLParam(r, "target")

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = chi.URLParam(r, "enterprise-id")

	// ------------- Path parameter "site-id" -------------
	var siteId string

	siteId = chi.URLParam(r, "site-id")

	// ------------- Path parameter "small-cell-id" -------------
	var smallCellId string

	smallCellId = chi.URLParam(r, "small-cell-id")

	var handler = func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.GetEnterprisesEnterpriseSiteSmallCell(w, r, target, enterpriseId, siteId, smallCellId)
	}

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler(w, r.WithContext(ctx))
}

// PostEnterprisesEnterpriseSiteSmallCell operation middleware
func (siw *ServerInterfaceWrapper) PostEnterprisesEnterpriseSiteSmallCell(w http.ResponseWriter, r *http.Request) {
	ctx := r.Context()

	var err error

	// ------------- Path parameter "target" -------------
	var target Target

	target = chi.URLParam(r, "target")

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = chi.URLParam(r, "enterprise-id")

	// ------------- Path parameter "site-id" -------------
	var siteId string

	siteId = chi.URLParam(r, "site-id")

	// ------------- Path parameter "small-cell-id" -------------
	var smallCellId string

	smallCellId = chi.URLParam(r, "small-cell-id")

	var handler = func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.PostEnterprisesEnterpriseSiteSmallCell(w, r, target, enterpriseId, siteId, smallCellId)
	}

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler(w, r.WithContext(ctx))
}

// GetEnterprisesEnterpriseSiteUpfList operation middleware
func (siw *ServerInterfaceWrapper) GetEnterprisesEnterpriseSiteUpfList(w http.ResponseWriter, r *http.Request) {
	ctx := r.Context()

	var err error

	// ------------- Path parameter "target" -------------
	var target Target

	target = chi.URLParam(r, "target")

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = chi.URLParam(r, "enterprise-id")

	// ------------- Path parameter "site-id" -------------
	var siteId string

	siteId = chi.URLParam(r, "site-id")

	var handler = func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.GetEnterprisesEnterpriseSiteUpfList(w, r, target, enterpriseId, siteId)
	}

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler(w, r.WithContext(ctx))
}

// DeleteEnterprisesEnterpriseSiteUpf operation middleware
func (siw *ServerInterfaceWrapper) DeleteEnterprisesEnterpriseSiteUpf(w http.ResponseWriter, r *http.Request) {
	ctx := r.Context()

	var err error

	// ------------- Path parameter "target" -------------
	var target Target

	target = chi.URLParam(r, "target")

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = chi.URLParam(r, "enterprise-id")

	// ------------- Path parameter "site-id" -------------
	var siteId string

	siteId = chi.URLParam(r, "site-id")

	// ------------- Path parameter "upf-id" -------------
	var upfId string

	upfId = chi.URLParam(r, "upf-id")

	var handler = func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.DeleteEnterprisesEnterpriseSiteUpf(w, r, target, enterpriseId, siteId, upfId)
	}

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler(w, r.WithContext(ctx))
}

// GetEnterprisesEnterpriseSiteUpf operation middleware
func (siw *ServerInterfaceWrapper) GetEnterprisesEnterpriseSiteUpf(w http.ResponseWriter, r *http.Request) {
	ctx := r.Context()

	var err error

	// ------------- Path parameter "target" -------------
	var target Target

	target = chi.URLParam(r, "target")

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = chi.URLParam(r, "enterprise-id")

	// ------------- Path parameter "site-id" -------------
	var siteId string

	siteId = chi.URLParam(r, "site-id")

	// ------------- Path parameter "upf-id" -------------
	var upfId string

	upfId = chi.URLParam(r, "upf-id")

	var handler = func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.GetEnterprisesEnterpriseSiteUpf(w, r, target, enterpriseId, siteId, upfId)
	}

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler(w, r.WithContext(ctx))
}

// PostEnterprisesEnterpriseSiteUpf operation middleware
func (siw *ServerInterfaceWrapper) PostEnterprisesEnterpriseSiteUpf(w http.ResponseWriter, r *http.Request) {
	ctx := r.Context()

	var err error

	// ------------- Path parameter "target" -------------
	var target Target

	target = chi.URLParam(r, "target")

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = chi.URLParam(r, "enterprise-id")

	// ------------- Path parameter "site-id" -------------
	var siteId string

	siteId = chi.URLParam(r, "site-id")

	// ------------- Path parameter "upf-id" -------------
	var upfId string

	upfId = chi.URLParam(r, "upf-id")

	var handler = func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.PostEnterprisesEnterpriseSiteUpf(w, r, target, enterpriseId, siteId, upfId)
	}

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler(w, r.WithContext(ctx))
}

// GetEnterprisesEnterpriseTemplateList operation middleware
func (siw *ServerInterfaceWrapper) GetEnterprisesEnterpriseTemplateList(w http.ResponseWriter, r *http.Request) {
	ctx := r.Context()

	var err error

	// ------------- Path parameter "target" -------------
	var target Target

	target = chi.URLParam(r, "target")

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = chi.URLParam(r, "enterprise-id")

	var handler = func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.GetEnterprisesEnterpriseTemplateList(w, r, target, enterpriseId)
	}

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler(w, r.WithContext(ctx))
}

// DeleteEnterprisesEnterpriseTemplate operation middleware
func (siw *ServerInterfaceWrapper) DeleteEnterprisesEnterpriseTemplate(w http.ResponseWriter, r *http.Request) {
	ctx := r.Context()

	var err error

	// ------------- Path parameter "target" -------------
	var target Target

	target = chi.URLParam(r, "target")

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = chi.URLParam(r, "enterprise-id")

	// ------------- Path parameter "template-id" -------------
	var templateId string

	templateId = chi.URLParam(r, "template-id")

	var handler = func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.DeleteEnterprisesEnterpriseTemplate(w, r, target, enterpriseId, templateId)
	}

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler(w, r.WithContext(ctx))
}

// GetEnterprisesEnterpriseTemplate operation middleware
func (siw *ServerInterfaceWrapper) GetEnterprisesEnterpriseTemplate(w http.ResponseWriter, r *http.Request) {
	ctx := r.Context()

	var err error

	// ------------- Path parameter "target" -------------
	var target Target

	target = chi.URLParam(r, "target")

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = chi.URLParam(r, "enterprise-id")

	// ------------- Path parameter "template-id" -------------
	var templateId string

	templateId = chi.URLParam(r, "template-id")

	var handler = func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.GetEnterprisesEnterpriseTemplate(w, r, target, enterpriseId, templateId)
	}

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler(w, r.WithContext(ctx))
}

// PostEnterprisesEnterpriseTemplate operation middleware
func (siw *ServerInterfaceWrapper) PostEnterprisesEnterpriseTemplate(w http.ResponseWriter, r *http.Request) {
	ctx := r.Context()

	var err error

	// ------------- Path parameter "target" -------------
	var target Target

	target = chi.URLParam(r, "target")

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = chi.URLParam(r, "enterprise-id")

	// ------------- Path parameter "template-id" -------------
	var templateId string

	templateId = chi.URLParam(r, "template-id")

	var handler = func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.PostEnterprisesEnterpriseTemplate(w, r, target, enterpriseId, templateId)
	}

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler(w, r.WithContext(ctx))
}

// DeleteEnterprisesEnterpriseTemplateMbr operation middleware
func (siw *ServerInterfaceWrapper) DeleteEnterprisesEnterpriseTemplateMbr(w http.ResponseWriter, r *http.Request) {
	ctx := r.Context()

	var err error

	// ------------- Path parameter "target" -------------
	var target Target

	target = chi.URLParam(r, "target")

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = chi.URLParam(r, "enterprise-id")

	// ------------- Path parameter "template-id" -------------
	var templateId string

	templateId = chi.URLParam(r, "template-id")

	var handler = func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.DeleteEnterprisesEnterpriseTemplateMbr(w, r, target, enterpriseId, templateId)
	}

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler(w, r.WithContext(ctx))
}

// GetEnterprisesEnterpriseTemplateMbr operation middleware
func (siw *ServerInterfaceWrapper) GetEnterprisesEnterpriseTemplateMbr(w http.ResponseWriter, r *http.Request) {
	ctx := r.Context()

	var err error

	// ------------- Path parameter "target" -------------
	var target Target

	target = chi.URLParam(r, "target")

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = chi.URLParam(r, "enterprise-id")

	// ------------- Path parameter "template-id" -------------
	var templateId string

	templateId = chi.URLParam(r, "template-id")

	var handler = func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.GetEnterprisesEnterpriseTemplateMbr(w, r, target, enterpriseId, templateId)
	}

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler(w, r.WithContext(ctx))
}

// PostEnterprisesEnterpriseTemplateMbr operation middleware
func (siw *ServerInterfaceWrapper) PostEnterprisesEnterpriseTemplateMbr(w http.ResponseWriter, r *http.Request) {
	ctx := r.Context()

	var err error

	// ------------- Path parameter "target" -------------
	var target Target

	target = chi.URLParam(r, "target")

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = chi.URLParam(r, "enterprise-id")

	// ------------- Path parameter "template-id" -------------
	var templateId string

	templateId = chi.URLParam(r, "template-id")

	var handler = func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.PostEnterprisesEnterpriseTemplateMbr(w, r, target, enterpriseId, templateId)
	}

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler(w, r.WithContext(ctx))
}

// GetEnterprisesEnterpriseTrafficClassList operation middleware
func (siw *ServerInterfaceWrapper) GetEnterprisesEnterpriseTrafficClassList(w http.ResponseWriter, r *http.Request) {
	ctx := r.Context()

	var err error

	// ------------- Path parameter "target" -------------
	var target Target

	target = chi.URLParam(r, "target")

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = chi.URLParam(r, "enterprise-id")

	var handler = func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.GetEnterprisesEnterpriseTrafficClassList(w, r, target, enterpriseId)
	}

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler(w, r.WithContext(ctx))
}

// DeleteEnterprisesEnterpriseTrafficClass operation middleware
func (siw *ServerInterfaceWrapper) DeleteEnterprisesEnterpriseTrafficClass(w http.ResponseWriter, r *http.Request) {
	ctx := r.Context()

	var err error

	// ------------- Path parameter "target" -------------
	var target Target

	target = chi.URLParam(r, "target")

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = chi.URLParam(r, "enterprise-id")

	// ------------- Path parameter "traffic-class-id" -------------
	var trafficClassId string

	trafficClassId = chi.URLParam(r, "traffic-class-id")

	var handler = func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.DeleteEnterprisesEnterpriseTrafficClass(w, r, target, enterpriseId, trafficClassId)
	}

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler(w, r.WithContext(ctx))
}

// GetEnterprisesEnterpriseTrafficClass operation middleware
func (siw *ServerInterfaceWrapper) GetEnterprisesEnterpriseTrafficClass(w http.ResponseWriter, r *http.Request) {
	ctx := r.Context()

	var err error

	// ------------- Path parameter "target" -------------
	var target Target

	target = chi.URLParam(r, "target")

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = chi.URLParam(r, "enterprise-id")

	// ------------- Path parameter "traffic-class-id" -------------
	var trafficClassId string

	trafficClassId = chi.URLParam(r, "traffic-class-id")

	var handler = func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.GetEnterprisesEnterpriseTrafficClass(w, r, target, enterpriseId, trafficClassId)
	}

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler(w, r.WithContext(ctx))
}

// PostEnterprisesEnterpriseTrafficClass operation middleware
func (siw *ServerInterfaceWrapper) PostEnterprisesEnterpriseTrafficClass(w http.ResponseWriter, r *http.Request) {
	ctx := r.Context()

	var err error

	// ------------- Path parameter "target" -------------
	var target Target

	target = chi.URLParam(r, "target")

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = chi.URLParam(r, "enterprise-id")

	// ------------- Path parameter "traffic-class-id" -------------
	var trafficClassId string

	trafficClassId = chi.URLParam(r, "traffic-class-id")

	var handler = func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.PostEnterprisesEnterpriseTrafficClass(w, r, target, enterpriseId, trafficClassId)
	}

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler(w, r.WithContext(ctx))
}

// Handler creates http.Handler with routing matching OpenAPI spec.
func Handler(si ServerInterface) http.Handler {
	return HandlerWithOptions(si, ChiServerOptions{})
}

type ChiServerOptions struct {
	BaseURL     string
	BaseRouter  chi.Router
	Middlewares []MiddlewareFunc
}

// HandlerFromMux creates http.Handler with routing matching OpenAPI spec based on the provided mux.
func HandlerFromMux(si ServerInterface, r chi.Router) http.Handler {
	return HandlerWithOptions(si, ChiServerOptions{
		BaseRouter: r,
	})
}

func HandlerFromMuxWithBaseURL(si ServerInterface, r chi.Router, baseURL string) http.Handler {
	return HandlerWithOptions(si, ChiServerOptions{
		BaseURL:    baseURL,
		BaseRouter: r,
	})
}

// HandlerWithOptions creates http.Handler with additional options
func HandlerWithOptions(si ServerInterface, options ChiServerOptions) http.Handler {
	r := options.BaseRouter

	if r == nil {
		r = chi.NewRouter()
	}
	wrapper := ServerInterfaceWrapper{
		Handler:            si,
		HandlerMiddlewares: options.Middlewares,
	}

	r.Group(func(r chi.Router) {
		r.Delete(options.BaseURL+"/aether/v2.0.x/{target}/connectivity-services", wrapper.DeleteConnectivityServices)
	})
	r.Group(func(r chi.Router) {
		r.Get(options.BaseURL+"/aether/v2.0.x/{target}/connectivity-services", wrapper.GetConnectivityServices)
	})
	r.Group(func(r chi.Router) {
		r.Post(options.BaseURL+"/aether/v2.0.x/{target}/connectivity-services", wrapper.PostConnectivityServices)
	})
	r.Group(func(r chi.Router) {
		r.Get(options.BaseURL+"/aether/v2.0.x/{target}/connectivity-services/connectivity-service", wrapper.GetConnectivityServicesConnectivityServiceList)
	})
	r.Group(func(r chi.Router) {
		r.Delete(options.BaseURL+"/aether/v2.0.x/{target}/connectivity-services/connectivity-service/{connectivity-service-id}", wrapper.DeleteConnectivityServicesConnectivityService)
	})
	r.Group(func(r chi.Router) {
		r.Get(options.BaseURL+"/aether/v2.0.x/{target}/connectivity-services/connectivity-service/{connectivity-service-id}", wrapper.GetConnectivityServicesConnectivityService)
	})
	r.Group(func(r chi.Router) {
		r.Post(options.BaseURL+"/aether/v2.0.x/{target}/connectivity-services/connectivity-service/{connectivity-service-id}", wrapper.PostConnectivityServicesConnectivityService)
	})
	r.Group(func(r chi.Router) {
		r.Delete(options.BaseURL+"/aether/v2.0.x/{target}/enterprises", wrapper.DeleteEnterprises)
	})
	r.Group(func(r chi.Router) {
		r.Get(options.BaseURL+"/aether/v2.0.x/{target}/enterprises", wrapper.GetEnterprises)
	})
	r.Group(func(r chi.Router) {
		r.Post(options.BaseURL+"/aether/v2.0.x/{target}/enterprises", wrapper.PostEnterprises)
	})
	r.Group(func(r chi.Router) {
		r.Get(options.BaseURL+"/aether/v2.0.x/{target}/enterprises/enterprise", wrapper.GetEnterprisesEnterpriseList)
	})
	r.Group(func(r chi.Router) {
		r.Delete(options.BaseURL+"/aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}", wrapper.DeleteEnterprisesEnterprise)
	})
	r.Group(func(r chi.Router) {
		r.Get(options.BaseURL+"/aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}", wrapper.GetEnterprisesEnterprise)
	})
	r.Group(func(r chi.Router) {
		r.Post(options.BaseURL+"/aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}", wrapper.PostEnterprisesEnterprise)
	})
	r.Group(func(r chi.Router) {
		r.Get(options.BaseURL+"/aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/application", wrapper.GetEnterprisesEnterpriseApplicationList)
	})
	r.Group(func(r chi.Router) {
		r.Delete(options.BaseURL+"/aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/application/{application-id}", wrapper.DeleteEnterprisesEnterpriseApplication)
	})
	r.Group(func(r chi.Router) {
		r.Get(options.BaseURL+"/aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/application/{application-id}", wrapper.GetEnterprisesEnterpriseApplication)
	})
	r.Group(func(r chi.Router) {
		r.Post(options.BaseURL+"/aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/application/{application-id}", wrapper.PostEnterprisesEnterpriseApplication)
	})
	r.Group(func(r chi.Router) {
		r.Get(options.BaseURL+"/aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/application/{application-id}/endpoint", wrapper.GetEnterprisesEnterpriseApplicationEndpointList)
	})
	r.Group(func(r chi.Router) {
		r.Delete(options.BaseURL+"/aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/application/{application-id}/endpoint/{endpoint-id}", wrapper.DeleteEnterprisesEnterpriseApplicationEndpoint)
	})
	r.Group(func(r chi.Router) {
		r.Get(options.BaseURL+"/aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/application/{application-id}/endpoint/{endpoint-id}", wrapper.GetEnterprisesEnterpriseApplicationEndpoint)
	})
	r.Group(func(r chi.Router) {
		r.Post(options.BaseURL+"/aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/application/{application-id}/endpoint/{endpoint-id}", wrapper.PostEnterprisesEnterpriseApplicationEndpoint)
	})
	r.Group(func(r chi.Router) {
		r.Delete(options.BaseURL+"/aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/application/{application-id}/endpoint/{endpoint-id}/mbr", wrapper.DeleteEnterprisesEnterpriseApplicationEndpointMbr)
	})
	r.Group(func(r chi.Router) {
		r.Get(options.BaseURL+"/aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/application/{application-id}/endpoint/{endpoint-id}/mbr", wrapper.GetEnterprisesEnterpriseApplicationEndpointMbr)
	})
	r.Group(func(r chi.Router) {
		r.Post(options.BaseURL+"/aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/application/{application-id}/endpoint/{endpoint-id}/mbr", wrapper.PostEnterprisesEnterpriseApplicationEndpointMbr)
	})
	r.Group(func(r chi.Router) {
		r.Get(options.BaseURL+"/aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/connectivity-service", wrapper.GetEnterprisesEnterpriseConnectivityServiceList)
	})
	r.Group(func(r chi.Router) {
		r.Delete(options.BaseURL+"/aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/connectivity-service/{connectivity-service}", wrapper.DeleteEnterprisesEnterpriseConnectivityService)
	})
	r.Group(func(r chi.Router) {
		r.Get(options.BaseURL+"/aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/connectivity-service/{connectivity-service}", wrapper.GetEnterprisesEnterpriseConnectivityService)
	})
	r.Group(func(r chi.Router) {
		r.Post(options.BaseURL+"/aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/connectivity-service/{connectivity-service}", wrapper.PostEnterprisesEnterpriseConnectivityService)
	})
	r.Group(func(r chi.Router) {
		r.Get(options.BaseURL+"/aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/site", wrapper.GetEnterprisesEnterpriseSiteList)
	})
	r.Group(func(r chi.Router) {
		r.Delete(options.BaseURL+"/aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}", wrapper.DeleteEnterprisesEnterpriseSite)
	})
	r.Group(func(r chi.Router) {
		r.Get(options.BaseURL+"/aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}", wrapper.GetEnterprisesEnterpriseSite)
	})
	r.Group(func(r chi.Router) {
		r.Post(options.BaseURL+"/aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}", wrapper.PostEnterprisesEnterpriseSite)
	})
	r.Group(func(r chi.Router) {
		r.Get(options.BaseURL+"/aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/device", wrapper.GetEnterprisesEnterpriseSiteDeviceList)
	})
	r.Group(func(r chi.Router) {
		r.Get(options.BaseURL+"/aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/device-group", wrapper.GetEnterprisesEnterpriseSiteDeviceGroupList)
	})
	r.Group(func(r chi.Router) {
		r.Delete(options.BaseURL+"/aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/device-group/{device-group-id}", wrapper.DeleteEnterprisesEnterpriseSiteDeviceGroup)
	})
	r.Group(func(r chi.Router) {
		r.Get(options.BaseURL+"/aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/device-group/{device-group-id}", wrapper.GetEnterprisesEnterpriseSiteDeviceGroup)
	})
	r.Group(func(r chi.Router) {
		r.Post(options.BaseURL+"/aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/device-group/{device-group-id}", wrapper.PostEnterprisesEnterpriseSiteDeviceGroup)
	})
	r.Group(func(r chi.Router) {
		r.Get(options.BaseURL+"/aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/device-group/{device-group-id}/device", wrapper.GetEnterprisesEnterpriseSiteDeviceGroupDeviceList)
	})
	r.Group(func(r chi.Router) {
		r.Delete(options.BaseURL+"/aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/device-group/{device-group-id}/device/{device-id}", wrapper.DeleteEnterprisesEnterpriseSiteDeviceGroupDevice)
	})
	r.Group(func(r chi.Router) {
		r.Get(options.BaseURL+"/aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/device-group/{device-group-id}/device/{device-id}", wrapper.GetEnterprisesEnterpriseSiteDeviceGroupDevice)
	})
	r.Group(func(r chi.Router) {
		r.Post(options.BaseURL+"/aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/device-group/{device-group-id}/device/{device-id}", wrapper.PostEnterprisesEnterpriseSiteDeviceGroupDevice)
	})
	r.Group(func(r chi.Router) {
		r.Delete(options.BaseURL+"/aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/device-group/{device-group-id}/mbr", wrapper.DeleteEnterprisesEnterpriseSiteDeviceGroupMbr)
	})
	r.Group(func(r chi.Router) {
		r.Get(options.BaseURL+"/aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/device-group/{device-group-id}/mbr", wrapper.GetEnterprisesEnterpriseSiteDeviceGroupMbr)
	})
	r.Group(func(r chi.Router) {
		r.Post(options.BaseURL+"/aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/device-group/{device-group-id}/mbr", wrapper.PostEnterprisesEnterpriseSiteDeviceGroupMbr)
	})
	r.Group(func(r chi.Router) {
		r.Delete(options.BaseURL+"/aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/device/{device-id}", wrapper.DeleteEnterprisesEnterpriseSiteDevice)
	})
	r.Group(func(r chi.Router) {
		r.Get(options.BaseURL+"/aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/device/{device-id}", wrapper.GetEnterprisesEnterpriseSiteDevice)
	})
	r.Group(func(r chi.Router) {
		r.Post(options.BaseURL+"/aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/device/{device-id}", wrapper.PostEnterprisesEnterpriseSiteDevice)
	})
	r.Group(func(r chi.Router) {
		r.Delete(options.BaseURL+"/aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/imsi-definition", wrapper.DeleteEnterprisesEnterpriseSiteImsiDefinition)
	})
	r.Group(func(r chi.Router) {
		r.Get(options.BaseURL+"/aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/imsi-definition", wrapper.GetEnterprisesEnterpriseSiteImsiDefinition)
	})
	r.Group(func(r chi.Router) {
		r.Post(options.BaseURL+"/aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/imsi-definition", wrapper.PostEnterprisesEnterpriseSiteImsiDefinition)
	})
	r.Group(func(r chi.Router) {
		r.Get(options.BaseURL+"/aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/ip-domain", wrapper.GetEnterprisesEnterpriseSiteIpDomainList)
	})
	r.Group(func(r chi.Router) {
		r.Delete(options.BaseURL+"/aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/ip-domain/{ip-domain-id}", wrapper.DeleteEnterprisesEnterpriseSiteIpDomain)
	})
	r.Group(func(r chi.Router) {
		r.Get(options.BaseURL+"/aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/ip-domain/{ip-domain-id}", wrapper.GetEnterprisesEnterpriseSiteIpDomain)
	})
	r.Group(func(r chi.Router) {
		r.Post(options.BaseURL+"/aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/ip-domain/{ip-domain-id}", wrapper.PostEnterprisesEnterpriseSiteIpDomain)
	})
	r.Group(func(r chi.Router) {
		r.Delete(options.BaseURL+"/aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/monitoring", wrapper.DeleteEnterprisesEnterpriseSiteMonitoring)
	})
	r.Group(func(r chi.Router) {
		r.Get(options.BaseURL+"/aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/monitoring", wrapper.GetEnterprisesEnterpriseSiteMonitoring)
	})
	r.Group(func(r chi.Router) {
		r.Post(options.BaseURL+"/aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/monitoring", wrapper.PostEnterprisesEnterpriseSiteMonitoring)
	})
	r.Group(func(r chi.Router) {
		r.Get(options.BaseURL+"/aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/monitoring/edge-device", wrapper.GetEnterprisesEnterpriseSiteMonitoringEdgeDeviceList)
	})
	r.Group(func(r chi.Router) {
		r.Delete(options.BaseURL+"/aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/monitoring/edge-device/{edge-device-id}", wrapper.DeleteEnterprisesEnterpriseSiteMonitoringEdgeDevice)
	})
	r.Group(func(r chi.Router) {
		r.Get(options.BaseURL+"/aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/monitoring/edge-device/{edge-device-id}", wrapper.GetEnterprisesEnterpriseSiteMonitoringEdgeDevice)
	})
	r.Group(func(r chi.Router) {
		r.Post(options.BaseURL+"/aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/monitoring/edge-device/{edge-device-id}", wrapper.PostEnterprisesEnterpriseSiteMonitoringEdgeDevice)
	})
	r.Group(func(r chi.Router) {
		r.Get(options.BaseURL+"/aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/sim-card", wrapper.GetEnterprisesEnterpriseSiteSimCardList)
	})
	r.Group(func(r chi.Router) {
		r.Delete(options.BaseURL+"/aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/sim-card/{sim-id}", wrapper.DeleteEnterprisesEnterpriseSiteSimCard)
	})
	r.Group(func(r chi.Router) {
		r.Get(options.BaseURL+"/aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/sim-card/{sim-id}", wrapper.GetEnterprisesEnterpriseSiteSimCard)
	})
	r.Group(func(r chi.Router) {
		r.Post(options.BaseURL+"/aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/sim-card/{sim-id}", wrapper.PostEnterprisesEnterpriseSiteSimCard)
	})
	r.Group(func(r chi.Router) {
		r.Get(options.BaseURL+"/aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/slice", wrapper.GetEnterprisesEnterpriseSiteSliceList)
	})
	r.Group(func(r chi.Router) {
		r.Delete(options.BaseURL+"/aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/slice/{slice-id}", wrapper.DeleteEnterprisesEnterpriseSiteSlice)
	})
	r.Group(func(r chi.Router) {
		r.Get(options.BaseURL+"/aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/slice/{slice-id}", wrapper.GetEnterprisesEnterpriseSiteSlice)
	})
	r.Group(func(r chi.Router) {
		r.Post(options.BaseURL+"/aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/slice/{slice-id}", wrapper.PostEnterprisesEnterpriseSiteSlice)
	})
	r.Group(func(r chi.Router) {
		r.Get(options.BaseURL+"/aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/slice/{slice-id}/device-group", wrapper.GetEnterprisesEnterpriseSiteSliceDeviceGroupList)
	})
	r.Group(func(r chi.Router) {
		r.Delete(options.BaseURL+"/aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/slice/{slice-id}/device-group/{device-group}", wrapper.DeleteEnterprisesEnterpriseSiteSliceDeviceGroup)
	})
	r.Group(func(r chi.Router) {
		r.Get(options.BaseURL+"/aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/slice/{slice-id}/device-group/{device-group}", wrapper.GetEnterprisesEnterpriseSiteSliceDeviceGroup)
	})
	r.Group(func(r chi.Router) {
		r.Post(options.BaseURL+"/aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/slice/{slice-id}/device-group/{device-group}", wrapper.PostEnterprisesEnterpriseSiteSliceDeviceGroup)
	})
	r.Group(func(r chi.Router) {
		r.Get(options.BaseURL+"/aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/slice/{slice-id}/filter", wrapper.GetEnterprisesEnterpriseSiteSliceFilterList)
	})
	r.Group(func(r chi.Router) {
		r.Delete(options.BaseURL+"/aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/slice/{slice-id}/filter/{application}", wrapper.DeleteEnterprisesEnterpriseSiteSliceFilter)
	})
	r.Group(func(r chi.Router) {
		r.Get(options.BaseURL+"/aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/slice/{slice-id}/filter/{application}", wrapper.GetEnterprisesEnterpriseSiteSliceFilter)
	})
	r.Group(func(r chi.Router) {
		r.Post(options.BaseURL+"/aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/slice/{slice-id}/filter/{application}", wrapper.PostEnterprisesEnterpriseSiteSliceFilter)
	})
	r.Group(func(r chi.Router) {
		r.Delete(options.BaseURL+"/aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/slice/{slice-id}/mbr", wrapper.DeleteEnterprisesEnterpriseSiteSliceMbr)
	})
	r.Group(func(r chi.Router) {
		r.Get(options.BaseURL+"/aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/slice/{slice-id}/mbr", wrapper.GetEnterprisesEnterpriseSiteSliceMbr)
	})
	r.Group(func(r chi.Router) {
		r.Post(options.BaseURL+"/aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/slice/{slice-id}/mbr", wrapper.PostEnterprisesEnterpriseSiteSliceMbr)
	})
	r.Group(func(r chi.Router) {
		r.Get(options.BaseURL+"/aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/slice/{slice-id}/priority-traffic-rule", wrapper.GetEnterprisesEnterpriseSiteSlicePriorityTrafficRuleList)
	})
	r.Group(func(r chi.Router) {
		r.Delete(options.BaseURL+"/aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/slice/{slice-id}/priority-traffic-rule/{priority-traffic-rule-id}", wrapper.DeleteEnterprisesEnterpriseSiteSlicePriorityTrafficRule)
	})
	r.Group(func(r chi.Router) {
		r.Get(options.BaseURL+"/aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/slice/{slice-id}/priority-traffic-rule/{priority-traffic-rule-id}", wrapper.GetEnterprisesEnterpriseSiteSlicePriorityTrafficRule)
	})
	r.Group(func(r chi.Router) {
		r.Post(options.BaseURL+"/aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/slice/{slice-id}/priority-traffic-rule/{priority-traffic-rule-id}", wrapper.PostEnterprisesEnterpriseSiteSlicePriorityTrafficRule)
	})
	r.Group(func(r chi.Router) {
		r.Get(options.BaseURL+"/aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/small-cell", wrapper.GetEnterprisesEnterpriseSiteSmallCellList)
	})
	r.Group(func(r chi.Router) {
		r.Delete(options.BaseURL+"/aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/small-cell/{small-cell-id}", wrapper.DeleteEnterprisesEnterpriseSiteSmallCell)
	})
	r.Group(func(r chi.Router) {
		r.Get(options.BaseURL+"/aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/small-cell/{small-cell-id}", wrapper.GetEnterprisesEnterpriseSiteSmallCell)
	})
	r.Group(func(r chi.Router) {
		r.Post(options.BaseURL+"/aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/small-cell/{small-cell-id}", wrapper.PostEnterprisesEnterpriseSiteSmallCell)
	})
	r.Group(func(r chi.Router) {
		r.Get(options.BaseURL+"/aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/upf", wrapper.GetEnterprisesEnterpriseSiteUpfList)
	})
	r.Group(func(r chi.Router) {
		r.Delete(options.BaseURL+"/aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/upf/{upf-id}", wrapper.DeleteEnterprisesEnterpriseSiteUpf)
	})
	r.Group(func(r chi.Router) {
		r.Get(options.BaseURL+"/aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/upf/{upf-id}", wrapper.GetEnterprisesEnterpriseSiteUpf)
	})
	r.Group(func(r chi.Router) {
		r.Post(options.BaseURL+"/aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/upf/{upf-id}", wrapper.PostEnterprisesEnterpriseSiteUpf)
	})
	r.Group(func(r chi.Router) {
		r.Get(options.BaseURL+"/aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/template", wrapper.GetEnterprisesEnterpriseTemplateList)
	})
	r.Group(func(r chi.Router) {
		r.Delete(options.BaseURL+"/aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/template/{template-id}", wrapper.DeleteEnterprisesEnterpriseTemplate)
	})
	r.Group(func(r chi.Router) {
		r.Get(options.BaseURL+"/aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/template/{template-id}", wrapper.GetEnterprisesEnterpriseTemplate)
	})
	r.Group(func(r chi.Router) {
		r.Post(options.BaseURL+"/aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/template/{template-id}", wrapper.PostEnterprisesEnterpriseTemplate)
	})
	r.Group(func(r chi.Router) {
		r.Delete(options.BaseURL+"/aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/template/{template-id}/mbr", wrapper.DeleteEnterprisesEnterpriseTemplateMbr)
	})
	r.Group(func(r chi.Router) {
		r.Get(options.BaseURL+"/aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/template/{template-id}/mbr", wrapper.GetEnterprisesEnterpriseTemplateMbr)
	})
	r.Group(func(r chi.Router) {
		r.Post(options.BaseURL+"/aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/template/{template-id}/mbr", wrapper.PostEnterprisesEnterpriseTemplateMbr)
	})
	r.Group(func(r chi.Router) {
		r.Get(options.BaseURL+"/aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/traffic-class", wrapper.GetEnterprisesEnterpriseTrafficClassList)
	})
	r.Group(func(r chi.Router) {
		r.Delete(options.BaseURL+"/aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/traffic-class/{traffic-class-id}", wrapper.DeleteEnterprisesEnterpriseTrafficClass)
	})
	r.Group(func(r chi.Router) {
		r.Get(options.BaseURL+"/aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/traffic-class/{traffic-class-id}", wrapper.GetEnterprisesEnterpriseTrafficClass)
	})
	r.Group(func(r chi.Router) {
		r.Post(options.BaseURL+"/aether/v2.0.x/{target}/enterprises/enterprise/{enterprise-id}/traffic-class/{traffic-class-id}", wrapper.PostEnterprisesEnterpriseTrafficClass)
	})

	return r
}
